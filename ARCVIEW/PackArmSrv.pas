unit PackArmSrv;
//****************************************************************************
//       Процедуры работы с каналом Сервер - РМ ДСП
//****************************************************************************
{$INCLUDE e:\Сапр_new\CfgProject}

interface

uses
  Windows,
  Graphics,
  Forms,
  StdCtrls,
  Registry,
  SyncObjs,
  comport;


type TKanalErrors = (keOk,keErrCRC,keErrSrc,keErrDst);

type TKanal = record
    config  : string;
    nPipe   : string;   //------------------------------------------------------ Имя трубы
    Index   : Byte;
    port    : TComPort;
    active  : Boolean;
    rcvsoob : string;
    isrcv   : boolean;
    issync  : boolean;
    iserror : boolean;
    cnterr  : integer;
    rcvcnt  : integer;
  end;

const
  LnSoobSrv  : integer = 70;    //----------------------------- длина сообщения от сервера

  FR_LIMIT = 4096;

var
  AnsverTimeOut    : Double; // Допустимый максимум времени захвата канала арм-сервер после приема маркера
  MaxTimeOutRecave : Double; // Допустимый максимум времени хранения данных в FR3 до сброса признака активизации (достоверности данных)
  NewFR    : array[1..2] of string;     //----------------------- буфер новизны для архива
  NewCmd   : array[1..2] of string;     //-- буфер сообщений отосланых в сервер для архива
  NewMenuC : string;                    //--- буфер команд меню, использованных оператором
  NewMsg   : string;                    //------------------ буфер сообщений из потока FR3
  BackCRC  : array[1..20,1..2] of WORD; //-------------------------------- буфер квитанций
  LastCRC  : array[1..2] of Byte;       //--------------- Указатель н апоследнюю квитанцию
  LastSrv  : array[1..2] of Byte;       //------------------- Номер запрашивающего сервера
  buffarc  : array[1..32768] of byte;   //----------------------- Буфер для записи в архив
  CmdCnt   : Byte;  //---------- счетчик команд раздельного управления, готовых к передаче
  DoubleCnt: Byte;  //------------- счетчик параметров Double готовых к передаче на сервер
  MySync   : array[1..2] of Boolean; //-- признак последней синхронизации от данной стойки

  //====================== параметры для прокрутки архива ================================
  DTFrameBegin  : Double;  //-------------------------------------------- Начало фрагмента
  DTFrameEnd    : Double;  //--------------------------------------------- Конец фрагмента
  DTFrameOffset : Double;  //--------------------------- время в точке просмотра фрагмента
  FrameOffset   : Integer; //---------------------- Указатель на точку просмотра фрагмента

  arhiv : string;  //----------------------------------- строка для воспроизведения архива

//========================  Массив датчиков из канала Сервер - АРМ  ======================
var
  FR3    : array[1..FR_LIMIT] of Byte;      // буфер обсчета состояний
  FR3inp : array[1..FR_LIMIT] of Char;      // буфер приема FR3
  FR3s   : array[1..FR_LIMIT] of TDateTime; // регистрация приема FR3
//=====================  Массив ограничений, полученных из Сервера =======================
var
  FR4    : array[1..FR_LIMIT] of Byte;      //-------------------- буфер обсчета состояний
  FR4inp : array[1..FR_LIMIT] of Char;      //--------------------------- буфер приема FR4
  FR4s   : array[1..FR_LIMIT] of TDateTime; //--------------------- регистрация приема FR4
//==========================  Массив признаков диагностики  ==============================
var
  FR5    : array[1..FR_LIMIT] of Byte;  //------------------------------ буфер диагностики
//========================   Массив двухбайтных параметров ===============================
var
  FR6 : array[1..1024] of Word;
//=======================   Массив четырехбайтных параметров =============================
var
  FR7 : array[1..1024] of Cardinal;
//========================== Массив восьмибайтных параметров =============================
var
  FR8 : array[1..1024] of int64;
//========================================================================================
var
  ArchName : string;   //------------------------------------- Имя файла архива (без пути)
  ArcIndex : cardinal; //------------------------------------------ Индекс строки в архиве
  KanalSrv : array[1..2] of TKanal; //----------------------------- структура канала связи

  savearc  : boolean; //--------------------- разрешение записи принимаемых данных в авхив
  chnl1    : string;  //----------------------------------------- прием данных из 1 канала
  chnl2    : string;  //----------------------------------------- прием данных из 2 канала

function SyncReady : Boolean;
function GetFR5(param : Word) : Byte;
function GetFR4State(param : Word) : Boolean;
function GetFR3(const param : Word; var nep, ready : Boolean) : Boolean;

implementation

uses
  crccalc,
  commands,
  commons,
  mainloop,
  TypeALL;

var
  OLS : TOverlapped;

//========================================================================================
//------------------------------------------------ пустая функция, нужна для совместимости
function SyncReady : Boolean;
begin
  result := false;
end;

//========================================================================================
//----------------------------------------------------------------------------------------
function GetFR5(param : Word) : Byte;
begin
  result := FR5[param];
  FR5[param] := 0; //--------------------------------------------------- очистить признаки
end;

//========================================================================================
//----------------------------------------------------------------------------------------
function GetFR3(const param : Word; var nep, ready : Boolean) : Boolean;
var
  p,d : integer;
begin
  result := false;
  ready := true;
  if param < 8 then exit;
  d := param and 7; //------------------------------------------ номер запрашиваемого бита
  p := param shr 3; //----------------------------------------- номер запрашиваемого байта
  if p > 4096 then exit;
  //------------------------------------------------------- Проверить достоверность данных
  ready := ArcReady;

  //--------------------------------------------- Проверить признак парафазности сообщения
  if not nep then nep := (FR3[p] and $20) = $20;

  //-------------------------------------------------------------------- Получить значение
  case d of
    1 : result := (FR3[p] and 2) = 2;
    2 : result := (FR3[p] and 4) = 4;
    3 : result := (FR3[p] and 8) = 8;
    4 : result := (FR3[p] and $10) = $10;
    5 : result := (FR3[p] and $20) = $20;
    6 : result := (FR3[p] and $40) = $40;
    7 : result := (FR3[p] and $80) = $80;
  else
    result := (FR3[p] and 1) = 1;
  end;
end;

//========================================================================================
//----------------------------------------------------------------------------------------
function GetFR4State(param : Word) : Boolean;
var
  p,d : integer;
begin
  result := false;
  if param < 8 then exit;
  d := param and 7;
  p := param shr 3;
  if p > 4096 then exit;

  //-------------------------------------------- Проверить превышение времени жизни данных
  if (LastTime - FR4s[p]) < MaxTimeOutRecave then
  begin
    case d of
      1 : result := (FR4[p] and 2) = 2;
      2 : result := (FR4[p] and 4) = 4;
      3 : result := (FR4[p] and 8) = 8;
      4 : result := (FR4[p] and $10) = $10;
      5 : result := (FR4[p] and $20) = $20;
      6 : result := (FR4[p] and $40) = $40;
      7 : result := (FR4[p] and $80) = $80;
    else
      result := (FR4[p] and 1) = 1;
    end;
  end
  else  result := false;
end;
end.
