unit typerpc;
//***********************************************************************
//
//                      Определение структур РМ-ДСП
//
//***********************************************************************

interface

uses
  Windows,
  Menus,
  Graphics;

//------------------------------------------------------------------------------

// Описание визуальных объектов

type
  TypeObjectView = 0..127;

  // Ссылка на внутриобъектные параметры
  TListParamObj = record
    Obj   : SmallInt; // индекс объекта
    Param : BYTE;     // индекс параметра
  end;

  TOVStruct = record
// Константная часть
    TypeObj   : BYTE;                          // Код объекта
    RU        : BYTE;                          // Индекс района управления
    Layer     : BYTE;                          // Слой (приоритет отображения)
    Title     : string;                        // наименование
    Points    : array[1..6] of TPoint;         // перечень точек
    ObjConstI : array[1..10] of SmallInt;      // список констант
    CRC       : Word;                          // Контрольная сумма
// Переменная часть
    Refresh   : boolean;                       // Признак изменения состояния
  end;
  POVStruct = ^TOVStruct;


//------------------------------------------------------------------------------
// Структура описания объектов управления
  TObjUprav = record
    RU        : BYTE;                          // Индекс района управления
    IndexObj  : SmallInt;                      // Индекс объекта зависимостей
    Title     : string;                        // Наименование объекта
    MenuID    : SmallInt;                      // идентификатор меню, связанного с объектом
    Box       : TRect;                         // поле чувствительности мыша
    Neighbour : array[1..4] of SmallInt;       // Перечень соседей для перемещения клавишами
    Hint      : string;                        // Всплывающее описание объекта
    CRC       : Word;                          // Контрольная сумма
  end;
  PObjUprav = ^TObjUprav;

//------------------------------------------------------------------------------
// Структуры описания объектов зависимостей

  TOZNeighbour = record
    TypeJmp  : BYTE;     // Тип соединения
    Obj      : SmallInt; // Индекс соседнего объекта
    Pin      : BYTE;     // Индекс порта соседнего объекта
  end;

  TTimerList = record
    Active : boolean; // Признак активности данного таймера
    First  : Double; // Первичный счетчик
    Second : Double; // Вторичный счетчик
  end;

  TypeObjectZav = 0..127;

  TOZStruct = record
// Константная часть
    TypeObj      : BYTE;                        // Код объекта
    Group        : BYTE;                        // Номер группы управления (ЭЦ или удаленный пост)
    RU           : BYTE;                        // Индекс района управления
    Title        : string;                      // наименование
    Liter        : string;                      // литер объекта
    Neighbour    : array[1..3] of TOZNeighbour; // Перечень соседей
    BaseObject   : SmallInt;                    // Номер базового объекта. Если данный объект
                                                // сам является базовым - 0, иначе указывает
                                                // на тот объект, для которого данный элемент
                                                // является расширителем свойств.
    UpdateObject : SmallInt;                    // Номер объекта дополняющего свойства
                                                // базового элемента.
    VBufferIndex : SmallInt;                    // Индекс в буфере отображения объекта
    ObjConstB    : array[1..24] of Boolean;     // Перечень параметров конфигурации булевских
    ObjConstI    : array[1..30] of SmallInt;    // Перечень параметров конфигурации целочисленных
    CRC1         : Word;                        // Контрольная сумма константной части параметров объекта
                                 // Описание параметров смотри в таблице
// Переменная часть
    Refresh      : boolean;                     // Признак изменения состояния
    bParam       : array[1..34] of Boolean;     // Внутренние параметры булевы
    iParam       : array[1..10] of SmallInt;    // Внутренние параметры целочисленные
    Timers       : array[1..5]  of TTimerList;  // Параметры для таймера и других

    NParam       : array[1..34] of Boolean;     // Внутренние параметры непарафазности данных
    AParam       : array[1..34] of Boolean;     // Внутренние параметры недостоверности данных

    dtParam      : array[1..7]  of Double;      // Параметры для хранения параметров DateTime
    sbParam      : array[1..32] of Boolean;     // Статистические параметры булевы
    siParam      : array[1..10] of SmallInt;    // Статистические параметры целочисленные

    Index        : SmallInt;                 // Индекс маршрута
    Counter      : SmallInt;                 // Счетчик проходов в маршруте по объекту
    RodMarsh     : Byte;                     // Род маршрута (поездной/маневровый+четный/нечетный+...)
    CRC2         : Word;                     // Контрольная сумма переменной части параметров объекта
  end;
  POZStruct = ^TOZStruct; // Объявление указателя на структуру объектов зависимостей

//------------------------------------------------------------------------------
// Буфер увязки объектов зависимостей с объектами отображения на табло
  TOVBuffer = record
// Константная часть
    TypeRec  : BYTE;     // Тип узла
    Jmp1     : SmallInt; // строка первичного перехода
    Jmp2     : SmallInt; // строка вторичного перехода
    DZ1      : SmallInt; // контролируемый объект 1
    DZ2      : SmallInt; // контролируемый объект 2
    DZ3      : SmallInt; // контролируемый объект 3
    Steps    : SmallInt; // количество требуемых шагов
    CRC      : Word;     // контрольная сумма
    Param    : array[1..32] of Boolean; // отображаемая битовая плоскость
    ParamL   : array[1..32] of Boolean; // временная битовая плоскость
    ParamN   : array[1..32] of Boolean; // битовая плоскость непарафазности датчиков
    ParamA   : array[1..32] of Boolean; // битовая плоскость достоверности датчиков
    StepOver : Boolean;  // признак завершения первичной обработки узла
  end;

//------------------------------------------------------------------------------
// Структура описания АКНР
Type
  TAutoTrace = record
    ObjStart : SmallInt;
    ObjEnd   : SmallInt;
    ObjAuto  : array[1..10] of SmallInt;
    Crc      : Word;
  end;

//------------------------------------------------------------------------------
// Структура описания района управления
  TConfigRU = record
    TabloSize : TPoint;    // Формат табло РУ
    MonSize   : TPoint;    // Разрешение экрана монитора
    MsgLeft   : SmallInt;  // Левый угола окна просмотра сообщений
    MsgTop    : SmallInt;  // Верхний
    MsgRight  : SmallInt;  // Правый
    MsgBottom : SmallInt;  // Нижний
    BoxLeft   : SmallInt;  // Левый край стеллажа с иконками
    BoxTop    : SmallInt;  // Верх угла
    OVmin     : SmallInt;  // минимальный индекс объекта табло
    OVmax     : SmallInt;  // максимальный индекс объекта табло
    OUmin     : SmallInt;  // минимальный индекс объекта управления
    OUmax     : SmallInt;  // максимальный индекс объекта управления
    OZmin     : SmallInt;  // минимальный индекс объекта зависимостей
    OZmax     : SmallInt;  // максимальный индекс объекта зависимостей
  end;

//------------------------------------------------------------------------------
// Структура загрузки модели станции для РМ-ДСП
  TConfigProject = record
    name      : string;                  // имя станции
    date      : string;                  // дата сборки БД
    path      : string;                  // путь к файлам модели станции
    arcpath   : string;                  // путь к файлам архива
    cur_id    : Integer;                 // номер выбраного начертания курсора для табло
    def_ru    : SmallInt;                // номер района управления по предустановке
    ru        : SmallInt;                // номер района управления на контроле
    RMID      : Word;                    // идентификатор РМ-ДСП в системе
    Master    : Boolean;                 // Признак ведущего в паре для операций АСУ
    Slave     : Boolean;                 // Признак ведомого в паре для операций АСУ
    direct    : Boolean;                 // признак разрешения управления объектами
    auto      : Boolean;                 // признак автоматического формирования запроса управления при загрузке
    configKRU : Byte;                    // тип переключения режима управления АРМа
    ozc       : Integer;                 // счетчик фрагментов описания объектов зависимостей
    ozname    : array[1..20] of string;  // список имен файлов раздела oz
    ozstart   : array[1..20] of Integer; // индексы 1-го объекта фрагмента
    ozlen     : array[1..20] of Integer; // длина фрагмента
    ozcrc     : array[1..20] of Integer; // Контрольная сумма фрагмента
    ovc       : Integer;                 // счетчик фрагментов описания объектов отображения
    ovname    : array[1..20] of string;  // список имен файлов раздела ov
    ovstart   : array[1..20] of Integer; // индексы 1-го объекта фрагмента
    ovlen     : array[1..20] of Integer; // длина фрагмента
    ovcrc     : array[1..20] of Integer; // Контрольная сумма фрагмента
    bvc       : Integer;                 // счетчик фрагментов описания объектов отображения
    bvname    : array[1..20] of string;  // список имен файлов раздела ov
    bvstart   : array[1..20] of Integer; // индексы 1-го объекта фрагмента
    bvlen     : array[1..20] of Integer; // длина фрагмента
    bvcrc     : array[1..20] of Integer; // Контрольная сумма фрагмента
    ouc       : Integer;                 // счетчик фрагментов описания объектов управления
    ouname    : array[1..20] of string;  // список имен файлов раздела ou
    oustart   : array[1..20] of Integer; // индексы 1-го объекта фрагмента
    oulen     : array[1..20] of Integer; // длина фрагмента
    oucrc     : array[1..20] of Integer; // Контрольная сумма фрагмента
  end;

//------------------------------------------------------------------------------
// Структура описания коротких сообщений РМ-ДСП
  TStringLex = record
    msg   : string;
    Color : TColor;
  end;

//------------------------------------------------------------------------------
// Структуры описания меню РМ-ДСП
  TDspMenuItem = record
    Command  : SmallInt;
    Obj      : SmallInt;
    MenuItem : TMenuItem;
    ID       : Integer;
  end;

  TDspMenu = record
    Items  : array[1..12] of TDspMenuItem;
    Ready  : boolean;  // Ожидание выбора команды
    WC     : boolean;  // Ожидание подтверждения от оператора
    obj    : SmallInt; // Индекс объекта, взятого для команды с подтверждением
    Count  : Byte;     // Счетчик пунктов меню
  end;

//------------------------------------------------------------------------------
// Структура выбора команды оператора
  TDspCommand = record
    Active  : Boolean;
    Command : Word;
    Obj     : SmallInt;
  end;

//------------------------------------------------------------------------------
// Структура отработки вспомогательного перевода стрелки
  TVspPerevod = record
    Cmd     : Word;      // Код ожидаемой команды
    Active  : Boolean;   // Активизация режима вспомогательного перевода стрелки
    Strelka : SmallInt;  // Стрелка для перевода
    Reper   : TDateTime; // Засечка времени для сброса ожидания по превышению лимита времени
  end;

  //------------------------------------------------------------------------------
// Структура отработки ответственной команды
  TOtvCommand = record
    State  : Boolean;   // Состояние датчика на момент запуска
    Check  : Word;      // Код подтверждения от сервера
    Cmd    : Word;      // Код ожидаемой команды
    Second : Word;      // Код полученой команды
    Ready  : Boolean;   // Ожидание ответа от нижнего уровня о завершении предварительной фазы
    Active : Boolean;   // Активизация ожидания исполнительной команды
    Obj    : SmallInt;  // Объект, ожидающий команду
    SObj   : SmallInt;  // Объект, выдавший исполнительную команду
    Reper  : TDateTime; // Засечка времени для сброса ожидания по превышению лимита времени
  end;

//------------------------------------------------------------------------------
// Структура фиксируемых сообщений
  TFixMessage = record
    Msg        : array[1..100] of string; // Список сообщений
    Color      : array[1..100] of TColor; // Список расцветок сообщений
    Count      : SmallInt;                // Счетчик сообщений
    MarkerLine : SmallInt;                // Маркер активного сообщения
    StartLine  : SmallInt;                // Номер верхней строки
  end;

//------------------------------------------------------------------------------
// Буфер команд раздельного управления
type TCommands = record
    Cmd : Byte;      // код команды
    Index : Word;    // индекс объекта
    LastObj : Word;  // индекс объекта последней команды
  end;

//------------------------------------------------------------------------------
// Буфер команд передачи параметров в формате Double
type TParamDouble = record
    Cmd : Byte;                  // код команды
    Index : array[1..8] of Byte; // параметр
    LastObj : Word;              // индекс объекта последней команды
  end;

//------------------------------------------------------------------------------
// Структура для регистрации событий на АРМ ШН
type TFixNotify = record
    Enable  : Boolean;  // Включена регистрация
    Sound   : Byte;     // Код звукового сообщения
    Obj     : SmallInt; // Индекс объекта, который необходимо открыть при наступлении события
    Datchik : array[1..6] of SmallInt; // Индекс ожидаемых датчиков
    State   : array[1..6] of Boolean;  // Регистрируемое состояние датчиков
    // переменные
    fix     : Boolean; // фиксация события
    beep    : Boolean; // включение звука
  end;

//------------------------------------------------------------------------------
// Структура описания имен массива FR3
type TLinkFR3 = record
    Name   : string;   // Имя датчика
    FR3    : SmallInt; // Индекс датчика в протоколе Сервер - ДСП
    fIndex : SmallInt; // Индекс объекта
    fBit   : Byte;     // номер бита
    //
    TUMS  : Byte;     // номер стойки
    tSoob : Byte;     // номер сообщения
    tByte : Byte;     // номер байта
    tBit  : Byte;     // номер бита
    tType : Byte;     // тип датчика (прямой/инверсный,виртуальный,составной,...)
  end;

//------------------------------------------------------------------------------
// Структура описания массива TCDC - датчики в канале ТС ДЦ
type TLinkTCDC = record
    Group  : char;
    SGroup : char;
    Name   : array[1..25] of string;   // Имя датчика
    Index  : array[1..25] of SmallInt; // Индекс датчика в протоколе АРМ - ЛП-ДЦ
  end;

//------------------------------------------------------------------------------
// Структура режима работы оператора
  TWorkMode = record
    MarhUpr    : Boolean; // маршрутное управление
    MarhOtm    : Boolean; // Отмена маршрута
    RazdUpr    : Boolean; // раздельное управление
    OtvKom     : Boolean; // ответственные команды
    VspStr     : Boolean; // Вспомогательный перевод стрелок
    InpOgr     : Boolean; // Ввод ограничений
    Podsvet    : Boolean; // подсветка положения стрелок
    NumTrain   : Boolean; // подсветка номенра поездов
    InpTrain   : Boolean; // ввод номера поезда
    GoTracert  : Boolean; // Идет трассировка маршрута
    MarhRdy    : Boolean; // признак готовности маршрута к выдаче в канал
    CmdReady   : Boolean; // Ожидание подтверждения выдачи маршрутной команды
    GoOtvKom   : Boolean; // Выполняется предварительная фаза ответственной команды
    GoMaketSt  : Boolean; // Выполняется выбор стрелки для постановки на макет
    Upravlenie : Boolean; // Перевод АРМа в состояние "Управляющий"
    LockCmd    : Boolean; // Временная блокировка управления с АРМа
    Check      : Byte;    // Контрольная сумма массива
    PushRU     : Boolean; // Фиксация нажатия кнопки включения управления с АРМа (в том числе виртуальной для варианта 0)
    PushOK     : Boolean; // Фиксация нажатия кнопки ответственных команд
    OKError    : Boolean; // Ошибка состояния кнопки ответственных команд
    DirectStateSoob : Word; // индекс объекта FR3 для получения подтверждений от сервера на переконфигурацию арма
    ServerStateSoob : Word; // индекс объекта FR3 для выдачи команд управления сервером
    ArmStateSoob    : Word; // индекс объекта FR3 для ведения протокола режима управления 
    LimitObjZav     : SmallInt; // Размер массива объектов зависимостей
    LimitObjView    : SmallInt; // Размер массива объектов отображения
    LimitObjUprav   : SmallInt; // Размер массива объектов управления
    LimitOVBuffer   : SmallInt; // Размер буфера отображения
    LimitFR         : SmallInt; // Размер массива FR3 - FR4 для записи в архив
    LimitNameFR     : SmallInt; // Размер массива имен FR3
    LimitSoobDC     : SmallInt; // Количество загруженых сообщений для канала ДЦ
    FixedMsg   : Boolean; // Признак фиксации сообщений
    RU  : array[0..8] of Boolean; // Включен режим управления с пульта
    OU  : array[0..8] of Boolean; // Включен режим управления с АРМа
    SU  : array[0..8] of Boolean; // Включен режим сезонного управления
    VSU : array[0..8] of Boolean; // Восприятие режима сезонного управления
    DU  : array[0..8] of Boolean; // Включен режим диспетчерского управления
    KRU : array[0..8] of Boolean; // Контроль соответствия режима управления
    NU  : array[0..8] of Boolean; // Контроль непарафазности датчиков контроля управления
    BU  : array[0..8] of Boolean; // Контроль отсутствия информации от датчиков контроля управления
// переменные для варианта переключения режима управления АРМа с помощю внешней кнопки
    RUError    : Boolean; // Ошибка состояния кнопки включения управления с АРМа (вариант 1, для варианта 0 не используется)
    ServerSync : Boolean; // Выдавать команду установки времени и синхронизации серверов
  end;

const
  // Типы соединителей для РМ-ДСП
  LnkEnd  = 0;
  LnkFull = 7;
  LnkIzo  = 28;
  LnkNeg  = 112;
  LnkRgn  = 193;


implementation
end.
