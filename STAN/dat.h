#include "opred.h"
//  int MODEMS;
  struct TRAS
  {
    unsigned int object;
    unsigned char tip;
    unsigned char stoyka;
    unsigned char podgrup;
    unsigned char kod_bit;
  }TRASSA[200],TRASSA1[200];

	extern struct MARS_ALL
	{
		char KMND;
		unsigned int NACH;
		int END;
		int NSTR;
		unsigned long POL_STR;
		int KOL_STR[Nst];
		unsigned int STREL[Nst][10];
		unsigned int SIG[Nst][10];
		unsigned int SP_UP[Nst][10];
		unsigned char SOST;
		int STOYKA[Nst];
    time_t T_VYD;
	}MARSHRUT_ALL[Nst*3];

	struct MARS_ST
	{
		char NEXT_KOM[14];
		char NUM;
		unsigned char SOST;
		time_t T_VYD;
		long T_MAX;
	}*MARSHRUT_ST[Nst][3];

	unsigned char MARSH_VYDAN[Nst];
	unsigned char KOMANDA_LAST[Nst][12];
	HANDLE FHNDL;
	int STOP_ALL;
	int ARM_SHN;
  int ARM_DSP;
  int SOSED;
  int index;
  int PRT1; //Основной канал
  int PRT2; //Резервный канал
  int PRT3; //Канал ББКП
  int PRT4; //Канал обмена ПЭВМ
  int PRT5; //Канал СПДЛП
  int PRT6; //Канал переключателя осн/рез
  int ERROR_OSN_REZ;  //признак наличия ошибки в определении статуса и номера
  int OSN_ARM; //Номер данного АРМа
	int ADR_ARM_OSN;  //канал связи с АРМ основной
  int ADR_ARM_REZ;  //канал связи с АРМ резервный
	int KOL_STR[Nst]={2};  //число объектов стрелок
	int KOL_SIG[Nst]={4};  //число объектов сигналов
	int KOL_DOP[Nst]={9};  //число дополнительных объектов
	int KOL_SP[Nst]={6};   //число объектов СП
	int KOL_PUT[Nst]={2};  //число объектов путей
	int KOL_KONT[Nst]={5}; //число объектов контроллера
	int SEMAFOR[Nst][2]; //семафор готовности маршрута в стойках для трассы
	int RASFASOVKA;
	int POVTOR_FR4;
	int ISPOLNIT[Nst*3];
	int out_dig[4], inp_dig[4], old_inp_dig[4];
	char StrOutInp[20],StrTmp[5],StrOutInpOld[20];
	AnsiString NomKnl;
	int cikl_marsh = 0;
  int byla_trb;
	int zagruzka;
	int POVTOR_OTKR = 0;
  int flag_err;
	unsigned char PODGR_OLD,BAITY_OLD[5];
	time_t TIME_OLD,T_TIME,TIME_DTR,TIME_COM,TIME_SVAZ;
	unsigned char VVOD[Nst][70][7],KORZINA[Nst],SERVER=1;
	unsigned char VVOD_NEPAR[Nst][70][7];
	char BUF_OUT_ARM[70];
  char BUF_OUT_DC[70];
	unsigned char BUF_OUT_ARM1[70];
  unsigned char BUF_IN_ARM[28];
  unsigned char BUF_IN_ARM1[28];
  unsigned char BUF_OUT_SOSED[28];
	unsigned char BUF_IN_SOSED[28];
  unsigned char OSN1_KS[28],OSN2_KS[28];
	unsigned char KOM_BUFER[28],KONFIG_ARM=0;
	unsigned char REZ1_KS[28],REZ2_KS[28];
	unsigned long KOL_VO;
	unsigned int KOL_VYD_MARSH[Nst];
	unsigned short int BD_OSN[16];
  AnsiString NAME_FILE;
	unsigned char *PEREDACHA,*PRIEM,*FR4,*ZAFIX_FR4;
  AnsiString *PAKO;
  long *POOO;
	unsigned char KOMANDA_ST[Nst][15],SHET_KOM[Nst];
	unsigned char PROCESS,tiki_tum[Nst];
	unsigned char MYTHX[Nst];
	unsigned int NOVIZNA[KOL_NEW],NOVIZNA_FR4[10],nom_new=0;
	unsigned int FLAG_KOM,TUMS_RABOT[Nst];
	unsigned int STATUS,  //код статуса АРМа - серверной части
	OLD_STATUS, //-------------------- прежний статус АРМа для фиксации момента переключения
	NUM_ARM,  //----------------------------------------------------------------- номер АРМа
	SHN, //признак работы с програмой АРМ-ШН
	CIKL;  //признак четного - нечетного циклов
	int file_arc,new_fr4,povtor_out=1,RESET_TIME;
	char Time1[11];
	unsigned char SVAZ,SVAZ_OLD;//----------------------------- состояние каналов связи АРМА
	unsigned char ZAPROS_ARM, N_PAKET, KOMANDA_TUMS[Nst][15];
	unsigned char KNOPKA_OK,KNOPKA_OK0;
	unsigned char KOK_OT_TUMS; //----------------- состояние кнопки КОК, вернувшееся от ТУМС
	unsigned char KVIT_ARMu[12];
	unsigned char KVIT_ARMu1[12];
	char OK_KNOPKA,SOST_RANJ[Narm],ACTIV,KOM_TIME[8];
	unsigned char KOMANDA_RAZD[12],KOMANDA_MARS[12],MYTHX_TEC[Nst];
//========================================================================================
	int First_Soob_TUMS[Nst],Last_Soob_TUMS[Nst];
	TDateTime Time_Last_Ot_TUMS[Nst],Time_Komanda_For_TUMS[Nst],Time_tek,Delta;
	bool Norma_TS[Nst],Norma_TU[Nst],Buf_Zaniat[Nst][10];
	int Poteral[Nst],Prinal[Nst];
	unsigned int Tek_Packet[Nst];
	unsigned char Komanda_For_TUMS[Nst][18],Kvit_For_TUMS[Nst][11];
	unsigned char Stroki_TUMS[Nst][45][18],Soob_TUMS[Nst][10][18],Kvit_Ot_TUMS[Nst][11];
	AnsiString Stroka;
//========================================================================================
	unsigned int KVIT_ARM[2][18];
	unsigned char SHET_MARSH[Nst];
	DWORD STATMODEM;
unsigned char crc08_table[256]={
	0x00, 0x5e, 0xbc, 0xe2, 0x61, 0x3f, 0xdd, 0x83,
	0xc2, 0x9c, 0x7e, 0x20, 0xa3, 0xfd, 0x1f, 0x41,
	0x9d, 0xc3, 0x21, 0x7f, 0xfc, 0xa2, 0x40, 0x1e,
	0x5f, 0x01, 0xe3, 0xbd, 0x3e, 0x60, 0x82, 0xdc,
	0x23, 0x7d, 0x9f, 0xc1, 0x42, 0x1c, 0xfe, 0xa0,
	0xe1, 0xbf, 0x5d, 0x03, 0x80, 0xde, 0x3c, 0x62,
	0xbe, 0xe0, 0x02, 0x5c, 0xdf, 0x81, 0x63, 0x3d,
	0x7c, 0x22, 0xc0, 0x9e, 0x1d, 0x43, 0xa1, 0xff,
	0x46, 0x18, 0xfa, 0xa4, 0x27, 0x79, 0x9b, 0xc5,
	0x84, 0xda, 0x38, 0x66, 0xe5, 0xbb, 0x59, 0x07,
	0xdb, 0x85, 0x67, 0x39, 0xba, 0xe4, 0x06, 0x58,
  0x19, 0x47, 0xa5, 0xfb, 0x78, 0x26, 0xc4, 0x9a,
  0x65, 0x3b, 0xd9, 0x87, 0x04, 0x5a, 0xb8, 0xe6,
  0xa7, 0xf9, 0x1b, 0x45, 0xc6, 0x98, 0x7a, 0x24,
	0xf8, 0xa6, 0x44, 0x1a, 0x99, 0xc7, 0x25, 0x7b,
  0x3a, 0x64, 0x86, 0xd8, 0x5b, 0x05, 0xe7, 0xb9,
  0x8c, 0xd2, 0x30, 0x6e, 0xed, 0xb3, 0x51, 0x0f,
  0x4e, 0x10, 0xf2, 0xac, 0x2f, 0x71, 0x93, 0xcd,
  0x11, 0x4f, 0xad, 0xf3, 0x70, 0x2e, 0xcc, 0x92,
  0xd3, 0x8d, 0x6f, 0x31, 0xb2, 0xec, 0x0e, 0x50,
	0xaf, 0xf1, 0x13, 0x4d, 0xce, 0x90, 0x72, 0x2c,
  0x6d, 0x33, 0xd1, 0x8f, 0x0c, 0x52, 0xb0, 0xee,
  0x32, 0x6c, 0x8e, 0xd0, 0x53, 0x0d, 0xef, 0xb1,
  0xf0, 0xae, 0x4c, 0x12, 0x91, 0xcf, 0x2d, 0x73,
  0xca, 0x94, 0x76, 0x28, 0xab, 0xf5, 0x17, 0x49,
  0x08, 0x56, 0xb4, 0xea, 0x69, 0x37, 0xd5, 0x8b,
  0x57, 0x09, 0xeb, 0xb5, 0x36, 0x68, 0x8a, 0xd4,
  0x95, 0xcb, 0x29, 0x77, 0xf4, 0xaa, 0x48, 0x16,
  0xe9, 0xb7, 0x55, 0x0b, 0x88, 0xd6, 0x34, 0x6a,
  0x2b, 0x75, 0x97, 0xc9, 0x4a, 0x14, 0xf6, 0xa8,
  0x74, 0x2a, 0xc8, 0x96, 0x15, 0x4b, 0xa9, 0xf7,
  0xb6, 0xe8, 0x0a, 0x54, 0xd7, 0x89, 0x6b, 0x35};
unsigned int  crc16_table[256]={
  0x0000, 0x1021, 0x2042, 0x3063, 0x4084, 0x50A5, 0x60C6, 0x70E7,
  0x8108, 0x9129, 0xA14A, 0xB16B, 0xC18C, 0xD1AD, 0xE1CE, 0xF1EF,
  0x1231, 0x0210, 0x3273, 0x2252, 0x52B5, 0x4294, 0x72F7, 0x62D6,
  0x9339, 0x8318, 0xB37B, 0xA35A, 0xD3BD, 0xC39C, 0xF3FF, 0xE3DE,
  0x2462, 0x3443, 0x0420, 0x1401, 0x64E6, 0x74C7, 0x44A4, 0x5485,
  0xA56A, 0xB54B, 0x8528, 0x9509, 0xE5EE, 0xF5CF, 0xC5AC, 0xD58D,
  0x3653, 0x2672, 0x1611, 0x0630, 0x76D7, 0x66F6, 0x5695, 0x46B4,
  0xB75B, 0xA77A, 0x9719, 0x8738, 0xF7DF, 0xE7FE, 0xD79D, 0xC7BC,
  0x48C4, 0x58E5, 0x6886, 0x78A7, 0x0840, 0x1861, 0x2802, 0x3823,
  0xC9CC, 0xD9ED, 0xE98E, 0xF9AF, 0x8948, 0x9969, 0xA90A, 0xB92B,
  0x5AF5, 0x4AD4, 0x7AB7, 0x6A96, 0x1A71, 0x0A50, 0x3A33, 0x2A12,
  0xDBFD, 0xCBDC, 0xFBBF, 0xEB9E, 0x9B79, 0x8B58, 0xBB3B, 0xAB1A,
  0x6CA6, 0x7C87, 0x4CE4, 0x5CC5, 0x2C22, 0x3C03, 0x0C60, 0x1C41,
	0xEDAE, 0xFD8F, 0xCDEC, 0xDDCD, 0xAD2A, 0xBD0B, 0x8D68, 0x9D49,
  0x7E97, 0x6EB6, 0x5ED5, 0x4EF4, 0x3E13, 0x2E32, 0x1E51, 0x0E70,
  0xFF9F, 0xEFBE, 0xDFDD, 0xCFFC, 0xBF1B, 0xAF3A, 0x9F59, 0x8F78,
  0x9188, 0x81A9, 0xB1CA, 0xA1EB, 0xD10C, 0xC12D, 0xF14E, 0xE16F,
  0x1080, 0x00A1, 0x30C2, 0x20E3, 0x5004, 0x4025, 0x7046, 0x6067,
  0x83B9, 0x9398, 0xA3FB, 0xB3DA, 0xC33D, 0xD31C, 0xE37F, 0xF35E,
  0x02B1, 0x1290, 0x22F3, 0x32D2, 0x4235, 0x5214, 0x6277, 0x7256,
  0xB5EA, 0xA5CB, 0x95A8, 0x8589, 0xF56E, 0xE54F, 0xD52C, 0xC50D,
  0x34E2, 0x24C3, 0x14A0, 0x0481, 0x7466, 0x6447, 0x5424, 0x4405,
	0xA7DB, 0xB7FA, 0x8799, 0x97B8, 0xE75F, 0xF77E, 0xC71D, 0xD73C,
  0x26D3, 0x36F2, 0x0691, 0x16B0, 0x6657, 0x7676, 0x4615, 0x5634,
  0xD94C, 0xC96D, 0xF90E, 0xE92F, 0x99C8, 0x89E9, 0xB98A, 0xA9AB,
  0x5844, 0x4865, 0x7806, 0x6827, 0x18C0, 0x08E1, 0x3882, 0x28A3,
  0xCB7D, 0xDB5C, 0xEB3F, 0xFB1E, 0x8BF9, 0x9BD8, 0xABBB, 0xBB9A,
  0x4A75, 0x5A54, 0x6A37, 0x7A16, 0x0AF1, 0x1AD0, 0x2AB3, 0x3A92,
  0xFD2E, 0xED0F, 0xDD6C, 0xCD4D, 0xBDAA, 0xAD8B, 0x9DE8, 0x8DC9,
  0x7C26, 0x6C07, 0x5C64, 0x4C45, 0x3CA2, 0x2C83, 0x1CE0, 0x0CC1,
  0xEF1F, 0xFF3E, 0xCF5D, 0xDF7C, 0xAF9B, 0xBFBA, 0x8FD9, 0x9FF8,
  0x6E17, 0x7E36, 0x4E55, 0x5E74, 0x2E93, 0x3EB2, 0x0ED1, 0x1EF0};
