//================================== файл объяыления переменных,структур и типов
unit TypeALL;
{$INCLUDE d:\sapr2012\CfgProject}
//----------------------------------------------------------------------------------------
// Файл объявления глобальных переменных и структур
//----------------------------------------------------------------------------------------
interface
uses  Windows,  Classes,  Registry,  Graphics,
{$IFNDEF RMARC}
ComPort,
{$ENDIF}
Menus;


//========================================================================================
//--------------------------------Структура описания файла-фрагмента объектов зависимостей
//---------------------------------------- используется в программе конвертера  "CnvToArm"
type
  TFrameDB = record
    ResOZ   : string; //-------------- Путь размещения файла-шаблона объектов зависимостей
    NameOZ  : string; //---------------------------------- Имя файла объектов зависимостей
    DestOZ  : string; //---------- Полный путь сохранения файла объектов зависимостей базы
    FirstOZ : Integer;//------------ Индекс первого объекта зависимостей РМДСП в фрагменте
    LastOZ  : Integer;//--------- Индекс последнего объекта зависимостей РМДСП в фрагменте
  end;

//------------------------------- Структура описания файлов исходной базы данных для САПРа
//---------------------------------------- используется в программе конвертера  "CnvToArm"
type
  TFrameSAPR = record
    NameObj  : string; //--------------- имя файла объектов зависимостей фрагмента проекта
    FirstObj : Integer;//----------- индекс первого объекта зависимостей фрагмента проекта
    LastObj  : Integer;//---------------- индекс последнего объекта зависимостей фрагмента
    NameCon  : string; //------------------------ имя файла соединителей фрагмента проекта
    FirstCon : Integer;//-------------------- индекс первого соединителя данного фрагмента
    LastCon  : Integer;//--------- индекс последнего соединителя данного фрагмента проекта
    NameFR3  : string; //------------------------------------------ имя файла связки с FR3
    FirstFR3 : Integer;//------------ индекс первой связки с FR3 данного фрагмента проекта
    LastFR3  : Integer;//--------- индекс последней связки с FR3 данного фрагмента проекта
    NameVB   : string; //--------------------------- имя файла связки с визуальным буфером
    FirstVB  : Integer;//------------- индекс первой связки с визуальным буфером фрагмента
    LastVB   : Integer;//---------- индекс последней связки с визуальным буфером фрагмента
  end;
//========================================================================================
//--------------------------------------------------- Структура описания района управления
//-------------------------- используется в программах "Tablo", "DSP", "ARCVIEW", "ARMSHN"
type
  TConfigRU = packed record
    T_S       : TPoint;    //--------------------------------------------- Формат табло РУ
    MonSize   : TPoint;    //---------------------------------- Разрешение экрана монитора
    MsgLeft   : SmallInt;  //------------------------- Левый край окна просмотра сообщений
    MsgTop    : SmallInt;  //----------------------- Верхний край окна просмотра сообщений
    MsgRight  : SmallInt;  //------------------------ Правый край окна просмотра сообщений
    MsgBottom : SmallInt;  //------------------------ Нижний край окна просмотра сообщений
    BoxLeft   : SmallInt;  //------------------------------ Левый край стеллажа с иконками
    BoxTop    : SmallInt;  //---------------------------- Верхний край стеллажа с иконками
    OVmin     : SmallInt;  //---------------------------- минимальный индекс объекта табло
    OVmax     : SmallInt;  //--------------------------- максимальный индекс объекта табло
    OUmin     : SmallInt;  //----------------------- минимальный индекс объекта управления
    OUmax     : SmallInt;  //---------------------- максимальный индекс объекта управления
    OZmin     : SmallInt;  //--------------------- минимальный индекс объекта зависимостей
    OZmax     : SmallInt;  //-------------------- максимальный индекс объекта зависимостей
  end;
//========================================================================================
//-------------------------------------------  Структура параметров объекта станции (САПР)
type
  TObjParams = packed record
  //------------------------- Описание объекта в структуре станции (сохраняются в проекте)
    Name    : string;   //------------------------------------------- Наименование объекта
    Index   : WORD;     //----------------------------- Номер записи в базе данных станции
    Line    : smallint; //--------------------------- Строка привязки в графическом образе
    Col     : smallint; //-------------------------- Столбец привязки в графическом образе
    IDO     : WORD;     //-------------- Идентификатор типа объекта из библиотеки объектов
    Jmp1    : WORD;     //------------------ Индекс соединителя, идущего в точку 1 объекта
    Jmp2    : WORD;     //----------------- Индекс соединителя, идущего из точки 2 объекта
    Jmp3    : WORD;     //---------------------------------- Индекс соединителя, к точке 3
    TmpName : string;   //--------------------- Временное имя входных/выходных интерфейсов
    Params : string;//----------- Список характеристик объекта(разделены точкой с запятой)
  //----------------- Переменные параметры объекта для редакторов зависимостей и маршрутов
    checkObj : Boolean; //------------------------------ Признак группового выбора объекта
    MarhLine : Integer; //------------------------------- Временный индекс строки маршрута
    LastLine : Integer; //---------- индекс последней строки до перехода к данному объекту
    errors   : Boolean; //-------------------------------- признак ошибок описания объекта
  end;
  PObjParams = ^TObjParams;//-------------- Указатель на элмент структуры объектов станции
//----------==============================================================================
type
//---------------------------------------------------------- Структура соединителей блоков
  TConnects = packed record
    Index    : WORD;  //--------------------------------------- индекс (номер) соединителя
    IDO      : WORD;  //----------------------------------- идентификатор типа соединителя
    BeginObj : WORD;  //------------------------------ объект со стороны начала коннектора
    BeginPin : WORD;  //----------------------- точка объекта со стороны начала коннектора
    EndObj   : WORD;  //------------------------------- объект со стороны конца коннектора
    EndPin   : WORD;  //------------------------ точка объекта со стороны конца коннектора
  end;
  PConnects = ^TConnects; //------------------ Указатель на элемент структуры соединителей

//----------==============================================================================
type
//------------------ Структура описания параметров датчиков входных интерфейсов УВК или ОК
  TInputInt = packed record
    Index  : WORD;    //---------------------- Индекс(номер) параметра входного интерфейса
    Name   : string;  //-------------------------------- Имя параметра входного интерфейса
    Limit  : integer; //---------------------------------- Лимит для использования датчика
    Used   : integer; //------- Счетчик используемости датчика в описаниях других объектов
  end;
  PInputInt=^TInputInt;//----------Указатель на описатель датчика вх.интерфейса УВК или ОК

//----------==============================================================================
type
//-------------------- Структура описания параметров логических (комбинированных) датчиков
  TLogicInt = packed record
    Name   : string;  //-------------------------------- Имя параметра входного интерфейса
    Logic  : string;  //---------------- Логическая формула, описывающая состояние датчика
  end;
  PLogicInt = ^TLogicInt;//----------Указатель на описатель логических (комб-ных) датчиков

//----------==============================================================================
type
//-------------------------- Структура описания параметров выходного интерфейса УВК или ОК
  TOutputInt = packed record
    Index  : WORD;    //--------------------- Индекс(номер) параметра выходного интерфейса
    Name   : string;  //------------------------------- Имя параметра выходного интерфейса
    Limit  : integer; //---------------------------------- Лимит для использования датчика
    Used   : integer; //--------------- Счетчик используемости датчика в описании объектов
    Remark : string; //------------------------- пояснения с текстом о назначении команды
  end;
  POutputInt=^TOutputInt;//----------- Указатель на описатель вых-го интерфейса УВК или ОК
  
//----------==============================================================================
type
//--------------------------- Структура описания палитры(библиотеки) блоков и соединителей
  TPalPlan = packed record
    title    : string; //-------------------------------- Сокращенное наименование объекта
    hint     : string; //--------------------------- Полное наименование объекта в палитре
    Index    : Integer; //------------------------------- Номер кнопки-выборщика в палитре
    page     : Cardinal; //------------------------------- Страница-вкладка палитры блоков
    key      : Integer; //--------------------------------------- Ключ-идентификатор = Ido
    IDO      : WORD;//---------- Идентификатор объекта (это номер записи в этой структуре)
    npin     : WORD;   //------------------ Количество точек подключений для этого объекта
    proplist : TStringList;
    //----------TStringList; //------------------- Список свойств для данного типа объекта
    //---------- Формат описания свойств:
    //---------- Ключ
    //---------- Тип параметра
    //---------- Значение по умолчанию
    //---------- Код мастера присвоения значения
    //---------- Перечень значений для параметра типа enum
  end;
  
//========================================================================================
type
//-------------------------------------------------------- Структура описания датчиков FR3
  TLinkFR3 = packed record
    Name     : string;  //-------------------------------- Имя объекта в структуре objects
    NameByte : string;  //-------------------------------------- Имя датчика или байта FR3
    NameBit  : string;  //--------------------------------------- Имя датчика или бита FR3
    Index    : Integer; //--------------------------------------------------------- индекс
    TypeRec  : Byte;    //------------- тип кодировки параметров объекта в интерфейсе ТУМС
    ByteFR3  : Integer; //------------------------------------------------ Номер байта FR3
    BitFR3   : Byte;    //------------------------------------------------- Номер бита FR3
    DspOZ    : integer; //--------Номер параметра в структуре объектов зависимостей РМ-ДСП
  end;

//========================================================================================
type
//---------------------------------------------------- Структура описания имен массива FR3
//----------/<property>
//----------/  </property>
TLinkFR3_T = record
    Name   : string;   //----------------------------------------------------- Имя датчика
    FR3    : SmallInt; //------------------------- Индекс датчика в протоколе Сервер - ДСП
    fIndex : SmallInt; //-------------------------------------------------- Индекс объекта
    fBit   : Byte;     //------------------------------------------------------ номер бита
    TUMS  : Byte;     //----------------------------------------------------- номер стойки
    tSoob : Byte;     //-------------------------------------------------- номер сообщения
    tByte : Byte;     //------------------------------------------------------ номер байта
    tBit  : Byte;     //------------------------------------------------------- номер бита
    tType : Byte;     //--------- тип датчика (прямой/инверсный,виртуальный,составной,...)
  end;
  
//========================================================================================
type
//-------------------------------------------------- Структура связи с буфером отображения
  TLinkVB = packed record
    Name     : string;  //-------------------------------- Имя объекта в структуре objects
    Index    : Integer; //--------------------------------------------------------- индекс
  end;
  
//========================================================================================
//----------------------------------------------------------- Описание визуальных объектов
type
  TypeObjectView = 0..127;
  //-------------------------------------------------- Ссылка на внутриобъектные параметры
  TListParamObj = record
    Obj   : SmallInt; //--------------------------------------------------- индекс объекта
    Param : BYTE;     //------------------------------------------------- индекс параметра
  end;
//========================================================================================

//========================================================================================
type
//------------------------------------------- структура для описания объектов визуализации
  TOVStruct = record
//---------------------------------------------------------------------- Константная часть
    TypeObj   : BYTE;  //------------------------------------- Код(идентификатор) объекта
    RU        : BYTE;  //--------------------------------------- Индекс района управления
    Layer     : BYTE;  //------------------------------------ Слой (приоритет отображения)
    Title     : string; //--------------------------------------------- литерал на экране
    Name      : string; //-------------------------------------------------- наименование
    P         : array[1..6] of TPoint; //---------------------------------- перечень точек
    ObCI      : array[1..16] of SmallInt;//---- список констант (через точку с запятой)
    CRC       : Word; //----------------------------------------------- Контрольная сумма
//---------------------------------------------------------------------- Переменная часть
    Refresh   : boolean;//----------------------------------- Признак изменения состояния
  end;
  POVStruct = ^TOVStruct; //----------------------------- Указатель на объект визуализации

//=======================================================================================
type
//------------------------------------------------- Структура описания объектов управления
  TObjUprav = record
    RU        : BYTE;                    //---------------------- Индекс района управления
    IndexObj  : SmallInt;                //------------------- Индекс объекта зависимостей
    Title     : string;                  //-------------------------- Наименование объекта
    MenuID    : SmallInt;                //----- идентификатор меню, связанного с объектом
    Box       : TRect;                   //-------------------- поле чувствительности мыша
    Sosed : array[1..4] of SmallInt;     //---- Перечень соседей для перемещения клавишами
    Hint      : string;                  //------------------ Всплывающее описание объекта
    CRC       : Word;                    //----------------------------- Контрольная сумма
  end;
  PObjUprav = ^TObjUprav; //--------------- указатель на структуру объекта управления

//========================================================================================
type
  TInputIntParam = packed record
    Tums   : string;
    Row    : byte;
    Col    : byte;
    Title  : string;
    Name   : string;
    Invert : Boolean;
    Remark : string;
  end;

//========================================================================================
type
  TOutputIntParam = packed record
    Tums   : string;
    Row    : byte;  //---------------------------------- групповое реле воздействия (1..7)
    Col    : byte; //---------------------------------- объектное реле воздействия (1..32)
    Name   : string; //------------------------------------------ имя управляемого объекта
    Remark : string; //---------------------------------- комментарий (назначение объекта)
  end;

//========================================================================================
type
//------------------------- Структуры описания соединителей соседних объектов зависимостей
  TSos = record
    TypeJmp  : BYTE;     //-------------------------------------- Тип соединения с соседом
    Obj      : SmallInt; //-------------------------------------- Индекс соседнего объекта
    Pin      : BYTE;     //-------------------------- Индекс точки входа соседнего объекта
  end;

//========================================================================================
type
//------------------------------------------------------------- Структура описания таймера
  TTimerList = record
    Activ : boolean; //-------------------------------- Признак активности данного таймера
    F  : Double; //----------------------------------------------------- Первичный счетчик
    S : Double; //------------------------------------------------------ Вторичный счетчик
  end;
//----------------------------------------------------------------------------------------

  TypeObjectZav = 0..127;  //коды значений для идентификаторов объектов зависимостей

//========================================================================================
//------------------------ Структура описания объектов зависимостей для программы DSP
  TOZStruct = record
//--------------------------------------------- Константная часть ------------------------
    TypeObj      : BYTE;    //------------------------------------------- Код типа объекта
    Group        : BYTE;    //------------ Номер группы управления (ЭЦ или удаленный пост)
    RU           : BYTE;    //----------------------------------- Индекс района управления
    Title        : string;  //----------------------------------------------- Наименование
    Liter        : string;  //---------------------------------------------- литер объекта
    Sosed        : array[1..3] of TSos; //------------------------------- Перечень соседей
    BasOb        : SmallInt; //------------------------------------ Номер базового объекта
    UpdOb        : SmallInt; //----------------------- Номер объекта дополняющего свойства
    VBufInd      : SmallInt; //------------------------- Индекс буфера отображения объекта

//--------- Описание нижеследующих параметров смотри в таблицах для каждого типа элементов
    ObCB         : array[1..24] of Boolean; //- Перечень параметров конфигурации булевских
    ObCI         : array[1..32] of SmallInt;//----- Перечень параметров конфигурации целых
    CRC1         : Word;//--------- Контрольная сумма константной части параметров объекта

//------------------------------------------ Переменная часть ----------------------------
    Refresh      : boolean;                 //---------------- Признак изменения состояния
    bP           : array[1..34] of Boolean; //---------------- Внутренние параметры булевы
    iP           : array[1..10] of SmallInt;//========= Внутренние параметры целочисленные
    T            : array[1..5]  of TTimerList;//------------------- Параметры для таймеров
    NParam       : array[1..34] of Boolean;//-- Внутренние параметры непарафазности данных
    AParam       : array[1..34] of Boolean;//- Внутренние параметры недостоверности данных

    dtP          : array[1..8]  of Double;   //----------- Параметры для хранения DateTime
    sbP          : array[1..34] of Boolean;  //------------Статистические параметры булевы
    siP          : array[1..10] of SmallInt; //---- Статистические параметры целочисленные

    Index        : SmallInt; //------------------------------------------- Индекс маршрута
    Counter      : SmallInt; //-------------------- Счетчик проходов в маршруте по объекту
    RodMarsh     : Byte;    //----- Род маршрута (поездной/маневровый+четный/нечетный+...)
  end;
  POZStruct = ^TOZStruct; //------ Объявление указателя на структуру объектов зависимостей
  
//========================================================================================
//-------------------- Буфер увязки объектов зависимостей с объектами отображения на табло
  TOVBuffer = record
// Константная часть
    TypeRec  : BYTE;     //------------------------------------------------------ Тип узла
    Jmp1     : SmallInt; //------------------------------------ строка первичного перехода
    Jmp2     : SmallInt; //------------------------------------ строка вторичного перехода
    DZ1      : SmallInt; //--------------------------------------- контролируемый объект 1
    DZ2      : SmallInt; //--------------------------------------- контролируемый объект 2
    DZ3      : SmallInt; //--------------------------------------- контролируемый объект 3
    Steps    : SmallInt; //------------------------------------ количество требуемых шагов
    CRC      : Word;     //--------------------------------------------- контрольная сумма
    Param    : array[1..32] of Boolean; //----------------- отображаемая битовая плоскость
    ParamInt : array[1..10] of Integer; //-------  вспомогательные переменнные целого типа
//    ParamA   : array[1..32] of Boolean; //------- битовая плоскость достоверности датчиков
    NParam   : array[1..32] of Boolean; //---- признаки непарафазности принятых параметров
    StepOver : Boolean;  //------------------- признак завершения первичной обработки узла
  end;
  
//========================================================================================
//---------------------------------------------------------------- Структура описания АКНР
  TAutoTrace = record
    ObjStart : SmallInt; //-------------------------------- индекс объекта начала маршрута
    ObjEnd   : SmallInt; //--------------------------------- индекс объекта конца маршрута
    ObjAuto  : array[1..10] of SmallInt;
    Crc      : Word;
  end;
  
//========================================================================================
//------------------------------------------- Структура загрузки модели станции для РМ-ДСП
  TConfigProject = record
    arcpath  : string;  //------------------------------------------- путь к файлам архива
    auto     : Boolean; //------- признак автоформирования запроса управления при загрузке
    avtodst  : Integer; //-- номер объекта программного автодействия в интерфейсе DSP-STAN
    bvcrc    : array[1..10] of Integer; //-------------------- Контрольная сумма фрагмента
    bvlen    : array[1..10] of Integer; //-------------------------------- длина фрагмента
    bvname   : array[1..10] of string;  //------------------ список имен файлов раздела ov
    bvstart  : array[1..10] of Integer; //----------------- индексы 1-го объекта фрагмента
    configKRU: Byte;    //------------------------ тип переключения режима управления АРМа
    cur_id   : Integer; //------------------- номер выбраного начертания курсора для табло
    date     : string;  //------------------------------------------------- дата сборки БД
    def_ru   : SmallInt;//----------------------- номер района управления по предустановке
    direct   : Boolean; //------------------------ признак разрешения управления объектами
    Master   : Boolean; //----------------------- Признак ведущего в паре для операций АСУ
    N_UVK    : SmallInt; //-------------------------- число стоек ТУМС(МСТУ) в системе РПЦ
    name     : string;  //---------------------------------------------------- имя станции
    ouc      : Integer; //---------------- счетчик фрагментов описания объектов управления
    oucrc    : array[1..10] of Integer; //-------------------- Контрольная сумма фрагмента
    oulen    : array[1..10] of Integer; //-------------------------------- длина фрагмента
    ouname   : array[1..10] of string;  //------------------ список имен файлов раздела ou
    oustart  : array[1..10] of Integer; //----------------- индексы 1-го объекта фрагмента
    ovc      : Integer;  //-------------- счетчик фрагментов описания объектов отображения
    ovcrc    : array[1..10] of Integer; //-------------------- Контрольная сумма фрагмента
    ovlen    : array[1..10] of Integer; //-------------------------------- длина фрагмента
    ovname   : array[1..10] of string;  //------------------ список имен файлов раздела ov
    ovstart  : array[1..10] of Integer; //----------------- индексы 1-го объекта фрагмента
    ozc      : Integer; //-------------- счетчик фрагментов описания объектов зависимостей
    ozcrc    : array[1..10] of Integer; //-------------------- Контрольная сумма фрагмента
    ozlen    : array[1..10] of Integer; //-------------------------------- длина фрагмента
    ozname   : array[1..10] of string;  //------------------ список имен файлов раздела oz
    ozstart  : array[1..10] of Integer; //----------------- индексы 1-го объекта фрагмента
    path     : string;  //----------------------------------- путь к файлам модели станции
    RMID     : Word;    //--------------------------------- идентификатор РМ-ДСП в системе
    ru       : BYTE;    //---------------------------- номер района управления на контроле
    Slave    : Boolean; //----------------------- Признак ведомого в паре для операций АСУ
    SVAZ_TUMS: array[1..16,1..3] of byte; //---------------- состояние каналов связи с УВК
  end;

//========================================================================================
//------------------------------------------- Структура описания коротких сообщений РМ-ДСП
  TStringLex = record
    msg   : string;
    Color : TColor;
  end;
  
//========================================================================================
//--------------------------------------------------------- Структура описания меню РМ-ДСП
  TDspMenuItem = record
    Command  : SmallInt;
    Obj      : SmallInt;
    MenuItem : TMenuItem;
    ID       : Integer;
  end;
  
//========================================================================================
//--------------------------------------------------------
  TDspMenu = record
    Items  : array[1..12] of TDspMenuItem;
    Ready  : boolean;  //----------------------------------------- Ожидание выбора команды
    WC     : boolean;  //----------------------------- Ожидание подтверждения от оператора
    obj    : SmallInt; //------------ Индекс объекта, взятого для команды с подтверждением
    Count  : Byte;     //-------------------------------------------- Счетчик пунктов меню
  end;
  
//========================================================================================
//----------------------------------------------------- Структура выбора команды оператора
  TDspCommand = record
    Active  : Boolean;
    Com     : Word;
    Obj     : SmallInt;
  end;
  
//========================================================================================
//---------------------------------- Структура отработки вспомогательного перевода стрелки
  TVspPerevod = record
    Cmd     : Word;      //----------------------------------------- Код ожидаемой команды
    Active  : Boolean;   //---------- Активизация режима вспомогательного перевода стрелки
    Strelka : SmallInt;  //------------------------------------------ Стрелка для перевода
    Reper   : TDateTime; //--------Засечка времени для сброса по превышению лимита времени
  end;
  
//========================================================================================
//---------------------------------------------- Структура отработки ответственной команды
  TOtvCommand = record
    State  : Boolean;   //---------------------------- Состояние датчика на момент запуска
    Check  : Word;      //----------------------------------- Код подтверждения от сервера
    Cmd    : Word;      //------------------------------------------ Код ожидаемой команды
    Second : Word;      //------------------------------------------ Код полученой команды
    Ready  : Boolean;   //---- Ожидание ответа нижнего уровня о конце предварительной фазы
    Active : Boolean;   //-------------------- Активизация ожидания исполнительной команды
    Obj    : SmallInt;  //-------------------------------------- Объект, ожидающий команду
    SObj   : SmallInt;  //------------------------ Объект, выдавший исполнительную команду
    Reper  : TDateTime; //-------- Засечка времени для сброса по превышению лимита времени
  end;
  
//========================================================================================
//-------------------------------------------------------- Структура фиксируемых сообщений
  TFixMessage = record
    Msg        : array[1..100] of string; //----------------------------- Список сообщений
    Color      : array[1..100] of TColor; //------------------- Список расцветок сообщений
    Count      : SmallInt;                //---------------------------- Счетчик сообщений
    ActLine    : SmallInt;                //------------------- Маркер активного сообщения
    StartLine  : SmallInt;                //------------------------- Номер верхней строки
  end;
  
//========================================================================================
//------------------------------------------------ Структура команд раздельного управления
   TCommands = record
    Cmd : Byte;      //------------------------------------------------------- код команды
    Index : Word;    //---------------------------------------------------- индекс объекта
    LastObj : Word;  //---------------------------------- индекс объекта последней команды
  end;
  
//========================================================================================
//-------------------------------------- Буфер команд передачи параметров в формате Double
  TParamDouble = record
    Cmd : Byte;  //----------------------------------------------------------- код команды
    Index : array[1..8] of Byte; //---------------------------------------------- параметр
    LastObj : Word;   //--------------------------------- индекс объекта последней команды
  end;
  
//========================================================================================
//-------------------------------------------- Структура для регистрации событий на АРМ ШН
  TFixNotify = record
    Enable  : Boolean;  //----------------------------------Признак "Включена регистрация"
    Sound   : Byte;     //---------------------------------------- Код звукового сообщения
    Obj     : SmallInt; //-- Индекс объекта, который нужно открыть при наступлении события
    Datchik : array[1..6] of SmallInt; //---------------------- Индексы ожидаемых датчиков
    State   : array[1..6] of Boolean;  //--------------- Регистрируемое состояние датчиков
    //------------------------------------ переменные-------------------------------------
    fix     : Boolean; //------------------------------------------------ фиксация события
    beep    : Boolean; //------------------------------------------------- включение звука
  end;
//========================================================================================
//------------------------------- Структура описания массива TCDC - датчики в канале ТС ДЦ
  TLinkTCDC = record
    Group  : char;
    SGroup : char;
    Name   : array[1..25] of string;   //------------------------------------- Имя датчика
    Index  : array[1..25] of SmallInt; //---------- Индекс датчика в протоколе АРМ - ЛП-ДЦ
  end;

//========================================================================================
//------------------------------------------------------ Структура режима работы оператора
TWorkMode = record
    ArmStateSoob : Word;    //- индекс объекта FR3 для ведения протокола режима управления
    BU  : array[0..8] of Boolean; //--------------------- Контроль активности датчиков КРУ
    CmdReady   : Boolean;         //----- Ожидание подтверждения выдачи маршрутной команды
    DirectStateSoob: Word;//- Индекс объекта FR3 подтверждений сервера реконфигурации АРМа
    DC : SmallInt; //- Признак существования на станции режима диспетчерской централизации
    DU  : array[0..8] of Boolean; //-------------- Включен режим диспетчерского управления
    FixedMsg   : Boolean;         //--------------------------- Признак фиксации сообщений
    GoMaketSt  : Boolean; //------------ Выполняется выбор стрелки для постановки на макет
    GoOtvKom   : Boolean; //------- Выполняется предварительная фаза ответственной команды
    GoTracert  : Boolean; //------------------------------------ Идет трассировка маршрута
    InpOgr     : Boolean; //--------------------------------------------- Ввод ограничений
    InpTrain   : Boolean; //------------------------------------------- ввод номера поезда
    KRU : array[0..8] of Boolean; //-------------- Контроль соответствия режима управления
    LimitFRI        : SmallInt; //------------ число объектов FR3 - FR4 для записи в архив
    LimitNameFRI    : SmallInt; //---------- Размер массива имен для разрядов объектов FR3
    LimitObjUprav   : SmallInt; //--------------------- Размер массива объектов управления
    LimitObjView    : SmallInt; //-------------------- Размер массива объектов отображения
    LimitObjZav     : SmallInt; //------------------- Размер массива объектов зависимостей
    LimitOVBuffer   : SmallInt; //------------------------------ Размер буфера отображения
    LimitSoobDC     : SmallInt; //---------- Количество загруженых сообщений для канала ДЦ
    LockCmd    : Boolean; //----------------------- Временная блокировка управления с АРМа
    MarhOtm    : Boolean; //---------------------------------------------- Отмена маршрута
    MarhRdy    : Boolean; //----------------- Признак готовности маршрута к выдаче в канал
    MarhUpr    : Boolean; //---------------------------------------- Маршрутное управление
    NU  : array[0..8] of Boolean; //-------- Контроль непарафазности датчиков объектов КРУ
    NumTrain   : Boolean; //------------------------------------ Подсветка номеров поездов
    OKError    : Boolean; //----------------- Ошибка состояния кнопки ответственных команд
    OtvKom     : Boolean; //---------------------------------------- Ответственные команды
    OU  : array[0..8] of Boolean; //---------------------- Включен режим управления с АРМа
    Podsvet    : Boolean; //---------------------------------- Подсветка положения стрелок
    PushOK     : Boolean; //----------------- Фиксация нажатия кнопки ответственных команд
    PushRU     : Boolean; //---------------- Фиксация нажатия кнопки вкл.управления с АРМа
                          //----------------------(в том числе виртуальной для варианта 0)
    RazdUpr    : Boolean; //---------------------------------------- Раздельное управление
    RU  : array[0..8] of Boolean; //-------------------- Включен режим управления с пульта
    ServerStateSoob : Word; //--- Индекс объекта FR3 для выдачи команд управления сервером
    SU    : SmallInt;       //------ Признак существования на станции сезонного управления
    SUpr  : array[0..8] of Boolean; //----------------- Включен режим сезонного управления
    Upravlenie : Boolean; //----------------------- Перевод АРМа в состояние "Управляющий"
    VspStr     : Boolean; //------------------------------ Вспомогательный перевод стрелок

   // переменные для варианта переключения режима управления АРМа с помощью внешней кнопки
    RUError    : word; //------------- Ошибка состояния кнопки включения управления с АРМа
                          //------------------ (вариант 1, для варианта 0 не используется)
    ServerSync : Boolean; //- Выдавать команду установки времени и синхронизации серверов
  end;
  
//========================================================================================
type
//------------------------------------------------------------- Структура параметров табло
  TTabloParams = packed record
    BoxLeft       : Integer; //-------------------------------- Левый край поля "ТАБЛИЧЕК"
    BoxTop        : Integer; //------------------------------ Верхний край поля "ТАБЛИЧЕК"
    CurrentFrag   : Integer; //--------------------- Номер табло, находящегося в редакторе
    CurX          : Integer; //----------------------------------- Координата курсора по Х
    CurY          : Integer; //----------------------------------- Координата курсора по У
    DLeft         : Integer; //-------------------------------- Смещение левого угла табло
    DTop          : Integer; //------------------------------ Смещение верхнего угла табло
    InsertStep    : Integer; //---------------- Номер шага при добавлении объекта на табло
    LastX         : Integer; //--------------- Последняя координата курсора по горизонтали
    LastY         : Integer; //----------------- Последняя координата курсора по вертикали
    LookCursor    : Boolean; //------------------------ Блокировка курсора кратковременная
    MsgBottom     : Integer; //--------------- Нижний край области фиксированных сообщений
    MsgLeft       : Integer; //---------------- Левый край области фиксированных сообщений
    MsgRight      : Integer; //--------------- Правый край области фиксированных сообщений
    MsgTop        : Integer; //-------------- Верхний край области фиксированных сообщений
    PlaceN        : Integer; //--------------------- Положение нечетных подходов на экране
    Point         : Integer; //------------------- Номер выбраной для редактирования точки
    Region        : Integer; //------------- Индекс района управления редактируемого табло
    ScreenHeight  : Integer; //--------------------------------------------- Высота экрана
    ScreenWidth   : Integer; //--------------------------------------------- Ширина экрана
    System_Tip    : Integer; //----------------------------- тип системы 0 - РПЦ; 1 - ТУМС
    TabloHeight   : Integer; //----------------------------------- Высота табло в пикселях
    TabloStepGrid : Integer; //---------------------------------- Шаг сетки разметки табло
    TabloType     : BYTE;    //----------------------- Тип табло ДСП,ШН,Коллективное,Макет
    TabloWidth    : Integer; //----------------------------------- Ширина табло в пикселях
    Title         : string;  //------------------------------------------- Заголовок табло
    TmpBegin      : TPoint;  //----------------------------------- Начало временной фигуры
    TmpEnd        : TPoint;  //------------------------------------ Конец временной фигуры
    VisibleCursor : Boolean; //--------------------------- Отображать слежение за курсором
    VisibleRows   : Byte;    //-------------------------- Отображать строки разметки табло
    XMarker       : Integer; //------------------------- Положение горизонтального маркера
    YMarker       : Integer; //--------------------------- Положение вертикального маркера
    Zoom          : Integer; //----------------------------------- Масштаб просмотра табло
  end;

//========================================================================================
type
//------------------------------------------------------------- Конфигурация табло проекта
  TConfigTablo = packed record
    OVName : string;
    OVStart : Integer;
    OVLen   : Integer;
    OUName : string;
    OUStart : Integer;
    OULen   : Integer;
    VBName : string;
    VBStart : Integer;
    VBLen   : Integer;
  end;
  
//========================================================================================
type
//-------------------------------------------------------------------------- Объекты табло
  TObjectsTablo = packed record
    Name   : string;    //------------------------------------------- Наименование объекта
    Params : TOVStruct; //---------------------------------------- Параметры объекта табло
  end;
type PObjectsTablo = ^TObjectsTablo;//-------------------------- Указатель на объект табло

//========================================================================================
type
//--------------------------------------------------------------------- Объекты управления
  TObjectsUprav = packed record
    Name   : string;  //--------------------------------------------- Наименование объекта
    Params : TObjUprav; //----------------------------------- Параметры объекта управления
  end;
  
//========================================================================================
type
//---------------------------------- Структура связки между объектами табло по горизонтали
  TLinkObjTablo = packed record
    objt : string;
    X    : Integer;
    Y    : Integer;
  end;
  
//========================================================================================
type
//----------------------------------------------------------------- Палитра объектов табло
  TPalTablo = packed record
    IDT      : BYTE;
    Title    : string;
    Hint     : string;
    PropList : TStringList;
  end;
//========================================================================================

//========================================================================================
const
  RCV_LIMIT = 4096;

  MarshM = 3;   //----------------------------------------------------- Маневровый маршрут
  MarshP = 12;  //------------------------------------------------------- Поездной маршрут
  MarshL = 19;  //--------------------------------------------------- Логическое замыкание
  TryMarhLimit = 6962;//Лимит объектов при трассировке маршрута. Если пройденных объектов
                      //---------- будет больше этого значения, то выдается сообщение №231
                      //--------------------------("превышен счетчик попыток трассировки")

//========================================================================================
//-------------------------------------------   Описание объектов Имитатора и его костанты
  MaxNumberTUMS = 8; //------------------------ Количество одновременно испытываемых стоек
  //------------------------------------- Коды состояния датчиков входного интерфейса ТУМС
  tcERRI = $03; //------------------------------------------------------- Состояние ошибки
  tcRFRT = $06; //----------------------------------- Состояние обрыва цепей фронта и тыла
  tcRFST = $0c; //---------------------------------- Состояние замыкания тылового контакта
  tcSFRT = $18; //-------------------------------- Состояние замыкания фронтового контакта
  tcSFST = $30; //-------------------- Состояние замыкания фронтового и тылового контактов
  tcAUTO = $60; //- Состояние датчика из программы испытаний (для заполнения структуры ii)


  //---------------------------------------------------- Константы для модели зависимостей
  modelMZ = 1; //----------------------------- Модель зависимостей с маршрутным замыканием
  modelSZ = 2; //----------------- Модель зависимостей с посекционным замыканием маршрутов
  ZSR     = 3;  //------------------------ Замедление поездного сигнального реле светофора
  ZSMR    = 1;  //-------------------------------- Замедление маневрового сигнального реле
  VVZ     = 5;  //--- Замедление на открытие сигнала при занятости предмаршрутного участка
  VVS     = 2;  // Замедление на открытие при свободном предмаршрутном участка и для теста
  ZAV     = 15; //--------------------------- Выдержка времени для стрелок с автовозвратом

  //------------------------------------------------------ Логика проследования для СП(УП)
  ot1st  = 1; // 1я ступень размыкания - проверка занятости предыдущего участка и текущего
  ot2st  = 2; // 2я ступень размык.- проверка освобождения предыдущего при занятом текущем
  ot3st  = 3; //3я ступень размык.-проверка освобождения текущего при занятости следующего
  otmPV  = 1; //------------------------------------------------ Поездная выдержка времени
  otmMV  = 2; //---------------------------------------------- Маневровая выдержка времени
  otmGOT = 3; //----------------------------------------------------- ГОТ выдержка времени
  marM   = 1; //------------------------------------------------------- Маневровый маршрут
  marP   = 2; //--------------------------------------------------------- Поездной маршрут
  marZ   = 3; //--------------------------------------------- Маршрут без открытия сигнала

  traTZM = 1; //--------------------------------------- Трассировка для замыкания маршрута
  traZM  = 2; //------------------------------------------------------- Замыкание маршрута
  traTRM = 3; //-------------------------------------- Трассировка для размыкания маршрута
  traRM  = 4; //------------------------------------------------------ Размыкание маршрута
  traSS  = 5; //----------------------------------- Контроль целостности сигнальной струны
  traKM  = 6; //---------- Восстановить контроль целостности маршрута (повторное открытие)
  traKS  = 7; // Проверка условий целостности маршрута до начала реализации (до завала КС)
  traVOM = 8; //-------- Проверка условий продолжения выдержки времени при отмене маршрута
  traIM  = 9; //------------------------------------- Трассировка известителя для маршрута
  traTVP = 10;//----------- Трассировка проверки враждебностей маршрута отправления с пути
  traUZ  = 11;//-------------- Трассировка условий размыкания углового заезда при маневрах

  testTZM = 98; //------------------------------- Трассировка тестового замыкания маршрута
  testTRM = 99; //------------------------------ Трассировка тестового размыкания маршрута

  //---------------------------------------------------------- КОДЫ КОМАНД ---------------
  //------------------------------------------------ для стрелки -------------------------
  stCmdZ       = 0; //---------------------------------------- Обсчет зависимостей стрелки
  stCmdPlus    = 1; //------------------------------------------ Команда перевода в "плюс"
  stCmdMinus   = 2; //----------------------------------------- Команда перевода в "минус"
  stCmdPerevod = 3; //---------------------------------------- Поддержка начатого перевода
  //----------------------------------------------- для стрелочной магистрали ------------
  smCmdZ       = 0; //-------------------------- Сбсчет зависимостей стрелочной магистрали
  smCmdRMOn    = 1; //-------------------------------- Включить рабочую магистраль стрелок
  smCmdRMOff   = 2; //------------------------------- Выключить рабочую магистраль стрелок
  smCmdMMOn    = 3; //--------------------------------------- Включить макетную магистраль
  smCmdMMOff   = 4; //-------------------------------------- Выключить макетную магистраль
  //---------------------------------------- для СП, УП ----------------------------------
  spCmdZ       = 0; //-------------------------------------- Обсчет зависимостей для СП,УП
  spCmdIR      = 1; //--------- Команда выбора секции для искусственного размыкания секции
  spCmdIRV     = 2; //-------- Запуск выдержки времени при искусственном размыкании секции

//---------------------------------------------------------- Определение цветов для РМ-ДСП
//               blue         green      red
  ACVT1  =   0 * 65536 +   0 * 256 + 255;  //----------------------- lt red = 0x0000FF
  ACVT2  =   0 * 65536 + 255 * 256 +   0;  //--------------------- lt green = 0x00FF00
  ACVT3  = 255 * 65536 +   0 * 256 +   0;  //-----------------------lt blue = 0xFF0000
  ACVT4  =   0 * 65536 +   0 * 256 + 191;  //-------------------------- red = 0x0000BF
  ACVT5  =   0 * 65536 + 191 * 256 +   0;   //----------------------- green = 0x00BF00
  ACVT6  = 191 * 65536 +   0 * 256 +   0;   //------------------------ blue = 0xBF0000
  ACVT7  =   0 * 65536 + 255 * 256 + 255; //------------------------ желтый = 0x00FFFF
  ACVT8  = 127 * 65536 + 127 * 256 + 127; //---------------------------gray = 0x7F7F7F
  ACVT9  = 255 * 65536 + 255 * 256 + 255; //------------------------- белый = 0xFFFFFF
  ACVT10 = 255 * 65536 +   0 * 256 + 127; //----------------------- magenta = 0xFF007F
  ACVT11 = 255 * 65536 +   0 * 256 + 255; //-------------------- lt magenta = 0xFF00FF
  ACVT12 =  95 * 65536 +  95 * 256 +  95; //----------- черный (нет данных) = 0x5F5F5F
  ACVT13 =   1 * 65536 + 135 * 256 + 205; //------------------------- brown = 0x0187CD
  ACVT14 = 255 * 65536 + 255 * 256 +   0;  //---------- циан (непарафазный) = 0xFFFF00
{$IFDEF RMARC}
  ACVT15 = 160 * 65536 + 196 * 256 + 196;//--------------------- фон архива = 0xA0C4C4
{$ELSE}
 ACVT15 = 191 * 65536 + 191 * 256 + 191;  //--------------------------- фон = 0xBFBFBF
{$ENDIF}
  ACVT16 = 239 * 65536 + 239 * 256 + 239; //------------------------------- = 0xEFEFEF
  ACVT17 =  63 * 65536 +  63 * 256 +  63; //------------------------------- = 0x3F3F3F
  ACVT18 = 205 * 65536 + 205 * 256 + 205; //------------------------------- = 0xEFEFEF
  ACVT19 = 209 * 65536 + 209 * 256 + 209; //------------------------------- = 0xCDCDCD
  ACVT20 = 215 * 65536 + 215 * 256 + 215;  //-------------------------- фон = 0xBFBFBF
  
  ACVT25 =   0 * 65536 + 16 * 256 + 128;//-------- цвет для синего мигнания = 0x001080
  ACVT26 =   0 * 65536 + 32 * 256 + 128;//-------- цвет для белого мигнания = 0x002080
  ACVT27 =   0 * 65536 + 48 * 256 + 128;//------- цвет для желтого мигнания = 0x003080
  ACVT28 =   0 * 65536 + 64 * 256 + 128;//------ цвет для красного мигнания = 0x004080
  ACVT29 =   0 * 65536 + 80 * 256 + 128;//------ цвет для зеленого мигнания = 0x005080
  ACVT30 = 240 * 65536 + 96 * 256 + 128; //-- цвет восклицательного(логика) = 0x006080

  bkgndcolor  = ACVT15; //-------------------------------------------------- фон табло
  focuscvt    = ACVT19; //------------------- фон выделенной строки в списке сообщений
  snsidecolor = ACVT16; //----------------------------------------- освещенная сторона
  dksidecolor = ACVT17; //-------------------------------------------- теневая сторона
  bkkeycolor  = ACVT18; //------------------------------------------------- фон кнопки

{$IFNDEF RMARC}
//-------------------------------------------------------------- Структура описания канала
type
  TKanal = record
    State   : Byte;
    config  : string;
    Index   : Byte;
    port    : TComPort;
    hPipe   : cardinal; // идентификатор трубы
    nPipe   : string;   // Имя трубы
    active  : Boolean;
    rcvsoob : string;   // массив полученых данных
    RcvBuf  : array[0..RCV_LIMIT-1] of char;
    RcvPtr  : word;     //----------------------------- указатель на конец принятой строки
    isrcv   : boolean;
    issync  : boolean;
    iserror : boolean; //------------------ ошибка приема более одного пакета за один такт
    cnterr  : integer; //- число пакетов принятых не с первого раза и застрявших квитанций
    rcvcnt  : integer; //---------------------------- счетчик количества принятых символов
    pktcnt  : integer; //----------------------------- счетчик количества принятых пакетов
    chklost : integer; //------------------------------------ счетчик потерянных квитанций
    pktlost : integer; //-------------------------------------- счетчик искаженных пакетов
    lastcnt : integer; //---- счетчик количества принятых байт при последнем чтении канала
    lostcnt : integer; //------------- счетчик количества перебоев приема данных из канала
  end;
{$ENDIF}

//------------------------------------ результаты очередного шага трассировки через объект
type
  TTrRes = (
    trStop,     //------ Конец трассировки из-за топологической несвязности точек маршрута
    trNext, //-------------------------------------------- Требуется сделать следующий шаг
    trPlus,  //---------------------------- Требуется сделать один шаг за встречный сигнал
    trKonec, //------------------------ Конец трассировки из-за обнаружения конца маршрута
    trBreak,    //---------------------------------- Приостановить продвижение по объектам
    trEnd,      //-------------------------------------------- Конец трассировки фрагмента
    trRepeat    //----------- Возврат к предыдущей стрелке для поиска трассы по отклонению
  );

//------------------------------------------------------------ Уровни трассировки маршрута
type
  TTrLev = (
    tlFindTrace,    //--- Проверка существования трассы маршрута между заданными объектами
    tlContTrace,    //---- Довести трассу до предполагаемого конца или отклоняющей стрелки
    tlVZavTrace,    //-------- Проверка взаимозависимостей по трассе (охранности и прочее)
    tlCheckTrace,   //-------------------------- проверка враждебностей по трассе маршрута
    tlZamykTrace,   //замыкание трассы маршрута, сбор положений отклоняющих стрелок трассы
    tlSignalCirc,   //---- Сигнальная струна (повторное открытие сигнала, отмена маршрута)
    tlOtmenaMarh,   //------------------ Отмена маршрута, замкнутого Реле "З" или сервером
    tlRazdelSign,   //--------------------------------- Открыть сигнал в раздельном режиме
    tlFindIzvest,   //------------------------- Собрать известитель перед отменой маршрута
    tlFindIzvStrel, //----- Проверка наличия незамкнутых стрелок на предмаршрутном участке
    tlStepBack,     //----------------------------- сделать откат назад по трассе маршрута
    tlPovtorMarh,   //--------------------------------------- Повторная установка маршрута
    tlPovtorRazdel, // Повтор открытия для замкнутого маршрута в режиме раздел. управления
    tlSetAuto,      //----------------------------- установка режима автодействия сигналов
    tlAutoTrace,    //----------------------------- Открыть сигнал в маршруте автодействия
    tlNone
  );

//--------------------------------------------------------- Структура трассировки маршрута
type
  TMarhTracert = record
    AutoMarh  : Boolean;    //---------- признак трассировки маршрута автодействия сигнала
    CIndex    : SmallInt;   //--- Указатель на текущий объект проверок (после трассировки)
    Counter     : SmallInt; //--------------------------------- Счетчик элементов маршрута
    Dobor       : Boolean;  // признак проверки возможности маршрута продлить трассируемый
    FindNext    : Boolean;  //----- Признак необходимости проверки возможности продолжения
    FindTail    : Boolean;  //---- Признак набора строки сообщения о конце трассы маршрута
    Finish      : Boolean;  //---------------------- Разрешение нажать кнопку конца набора
    FullTail    : Boolean;  //--------------------- Признак полноты добора хвоста маршрута
    GonkaList   : SmallInt; // число стрелок для команды гонки стрелок для трассы маршрута
    GonkaStrel  : Boolean;  //----- признак допустимости гонки стрелок для трассы маршрута
    HTail       : SmallInt; //----------- Объект на хвосте трассы, определенный оператором
    IzvCount    : SmallInt; //----------- счетчик блок-участков для сборки схемы извещения
    IzvStrFUZ   : Boolean;  //---------------- признак занятости участка "первым" составом
    IzvStrNZ    : Boolean;  //признак наличия незамкнутых стрелок на предмаршрутном уч-тке
    IzvStrUZ    : Boolean;  //--- признак наличия занятых секций на предмаршрутном участке
    Level       : TTrLev;  //---------------------------------- Этап трассировки маршрута
    LockPovtor  : Boolean;  //----- признак блокировки выдачи повторной установки маршрута
                            //---------------------------- после обнаружения враждебностей
    LvlFNext    : Boolean;  //------ Признак процедур поиска трассы tlFindTrace для поиска
                            //------------------ возможности установки следующего маршрута
    MarhCmd     : array[1..10] of Byte;     //------------------------- Маршрутная команда
    Msg         : array[1..20] of string; //----------------------- сообщение враждебности
    MsgN    : Integer;             //--------- Счетчик сообщений враждебностей трассировки
    MsgInd      : array[1..20]  of smallint;  //----------- индексы сообщения враждебности
    MsgObj      : array[1..20]  of smallint;  //---- индекс объекта сообщения враждебности
    ObjEnd      : SmallInt;  //- Объект конца маршрута, после продления, найден программой
    ObjLast     : SmallInt;  //---- Объект для трассировки конца маршрута задан оператором
    ObjPrev     : SmallInt;  //------------------------ Объект конца предыдущей трассироки
    ObjStart    : SmallInt;  //------------------------------------ Объект начала маршрута
    ObjTRS      : array[1..200] of SmallInt;   //---- Список промежуточных точек по трассе
    PinLast     : Byte;// Точка откуда ведется поиск трассы до следующего объекта маршрута
    PinPrev     : Byte;//------------------------------ Точка конца предыдущей трассировки
    PolTras     : array[1..24,1..2] of Boolean;//- Положения определяющих стрелок маршрута
    Povtor  : Boolean; //признак повтора проверки трассы(снимает контроль пред.замык.АРМа)
    PutNadviga  : SmallInt; //- индекс объекта надвига, на который выполняется трассировка
    PutPriem    : SmallInt; //-- индекс объекта приема, на который выполняется трассировка
    PutPO       : Boolean;  //--------------------------------- Признак трассировки в пути
    Rod         : Byte;     //----------------------------------------------- Род маршрута
    StrCount    : Byte;                     //------- Счетчик отклоняющих стрелок маршрута
    StrOtkl    : array[1..24] of SmallInt; // Список индексов отклоняющих стрелок маршрута
    SvetBrdr    : SmallInt;   //------- индекс светофора, ограждающий элементарный участок
    TailMsg     : string;     //------------------------------ сообщение в хвосте маршрута
    TraSRazdel  : Boolean;    //-------------- признак трассировки в раздельном управлении
    VP          : SmallInt;   //---------------- объект ВП для трассировки маршрута приема
    WarN        : Integer;    //------------ Счетчик предупреждений при установке маршрута
    WarInd      : array[1..20] of smallint; //------------ индекс сообщения предупреждения
    War         : array[1..20] of string;   //------ предупреждения при установке маршрута
    WarObj      : array[1..20] of smallint;//----- индекс объекта сообщения предупреждения
  end;


type

//(ИМИТАТОР)Структура описания выходного интерфейса ТУМС (внутристоечные реле и о17...о32)
//----------------------------------------------------- в отображении на входной интерфейс
TOutputInterface = record
  InpInt : array[1..48] of integer; //------------------------------ Место в матрице ввода
  Config : array[1..48] of integer; //-------------------- Описание реакции на воздействие
  State  : array[1..48] of BYTE;    //------------------------------------- Состояние реле
end;

//(ИМИТАТОР) ------------------------- Структура описания датчика входного интерфейса ТУМС
TInpDatInterface = record
  Name   : string;  //----------------------------------------------- Наименование датчика
  Config : integer; //------------------------------------------ Режим изменения параметра
  State  : BYTE;    //------------------------------------------ Текущее состояние датчика
end;

//(ИМИТАТОР) -- Матрица ввода данных ТУМС состоит из множества датчиков заданной структуры
TInputInterface = record
  datch : array[1..14*32{40}] of TInpDatInterface;
end;

//(ИМИТАТОР) ------------------------------------- Структура описания имитации для станции
TImitParams = record
  fdim  : array[1..MaxNumberTUMS,1..75] of BYTE;//фронт-контакты датчиков сообщил имитатор
  tdim  : array[1..MaxNumberTUMS,1..75] of BYTE;//  тыл-контакты датчиков сообщил имитатор
  ufdim : array[1..MaxNumberTUMS,1..75] of BYTE;//------- желаемые фронт-контакты датчиков
  utdim : array[1..MaxNumberTUMS,1..75] of BYTE;//--------- желаемые тыл-контакты датчиков
  cmd   : array[1..MaxNumberTUMS,1..12] of BYTE;//- состояния датчиков вых.интерфейса ТУМС
  cmdrd : array[1..MaxNumberTUMS] of Boolean; //запрос обработки выходного интерфейса ТУМС
  Power : array[1..MaxNumberTUMS] of BYTE;      //-- Признак включения питания стойки ТУМС
  KP1   : array[1..MaxNumberTUMS] of BYTE;      //------------------ Исправность БП1 (А22)
  KP2   : array[1..MaxNumberTUMS] of BYTE;      //------------------ Исправность БП2 (А23)
  K     : array[1..MaxNumberTUMS] of BYTE;      //------------------------ Контроль канала
  Ao    : array[1..MaxNumberTUMS] of BYTE;      //-------- Аварийное реле левого комплекта
  Ar    : array[1..MaxNumberTUMS] of BYTE;      //------- Аварийное реле правого комплекта
  R     : array[1..MaxNumberTUMS] of BYTE;      //Положение реле резервирования комплектов
  T_D   : array[1..MaxNumberTUMS] of BYTE;      //------ Признак выбора комплекта Верх/Низ
  cfg   : array[1..MaxNumberTUMS,1..6] of BYTE; // Карта состояний параметров конфигурации
  cfgrd : array[1..MaxNumberTUMS] of Boolean;   //признак необработанной конфиг. имитатора
  inrdy : array[1..MaxNumberTUMS,1..25] of boolean; // новизна датчиков вх.интерфейса ТУМС
  actim : array[1..MaxNumberTUMS] of Boolean; //-- Признак активизации канала с имитатором
  imierr: array[1..MaxNumberTUMS] of Boolean; //----Ошибки канала Имитатор - АРМ Имитатора
  acttu : array[1..MaxNumberTUMS] of Boolean;  //------- признак активизации канала с ТУМС
tumserr : array[1..MaxNumberTUMS] of Boolean;//  ошибки обмена канала ТУМС - АРМ Имитатора
{$IFNDEF RMARC}
  comim : array[1..MaxNumberTUMS] of TComPort;//Указатель на порт,подключенный к имитатору
  comtu : array[1..MaxNumberTUMS] of TComPort;//------ указатель порта связи ТУМС с РМ ДСП
  comlp : TComPort;                   //---------- Указатель на порт, подключенный к петле
  comdc : TComPort;                   //------ Указатель на порт, подключенный ко входу ДЦ
{$ENDIF}
  rcv   : array[1..MaxNumberTUMS] of string; //------------------ Буфер принятых сообщений
  trm   : array[1..MaxNumberTums] of string; //-------------- Буфер передаваемых сообщений
  invrd : array[1..MaxNumberTUMS] of boolean;//-Признак поступления новых данных по чтению
end;

//--- (ИМИТАТОР) Структура описания состояния "кнопочных" команд выходного интерфейса ТУМС
TOutputEvent = record
  dpu_s    : array[1..32] of BYTE;   //--------------- Состояния кнопочных реле группы ДПУ
  dpu_o    : array[1..32] of BYTE;   //---- предыдущее состояния кнопочных реле группы ДПУ
  dpu_dot  : array[1..32] of Boolean;//-------------------- Признак отмены совместно с ДОТ
  dpu_n    : array[1..32] of string; //------------- список имен в группе ДПУ для О1 - О32

  dmu_s    : array[1..32] of BYTE;   //--------------- Состояния кнопочных реле группы ДМУ
  dmu_o    : array[1..32] of BYTE;   //---- предыдущее состояния кнопочных реле группы ДМУ
  dmu_dot  : array[1..32] of Boolean;//-------------------- Признак отмены совместно с ДОТ
  dmu_n    : array[1..32] of string; //------------- список имен в группе ДМУ для О1 - О32

  dps_s    : array[1..32] of BYTE;   //--------------- Состояния кнопочных реле группы ДПС
  dps_o    : array[1..32] of BYTE;   //---- предыдущее состояния кнопочных реле группы ДПС
  dps_dot  : array[1..32] of Boolean;//-------------------- Признак отмены совместно с ДОТ
  dps_n    : array[1..32] of string; //------------- список имен в группе ДПС для О1 - О32

  dms_s    : array[1..32] of BYTE;   //--------------- Состояния кнопочных реле группы ДМС
  dms_o    : array[1..32] of BYTE;   //---- предыдущее состояния кнопочных реле группы ДМС
  dms_dot  : array[1..32] of Boolean;//-------------------- Признак отмены совместно с ДОТ
  dms_n    : array[1..32] of string; //------------- список имен в группе ДМС для О1 - О32

  dcsn_s   : array[1..32] of BYTE;   //-------------- Состояния кнопочных реле группы ДЧСН
  dcsn_o   : array[1..32] of BYTE;   //--- предыдущее состояния кнопочных реле группы ДЧСН
  dcsn_dot : array[1..32] of Boolean;//-------------------- Признак отмены совместно с ДОТ
  dcsn_n   : array[1..32] of string; //------------ список имен в группе ДЧСН для О1 - О32

  dnsn_s   : array[1..32] of BYTE;   //-------------- Состояния кнопочных реле группы ДНСН
  dnsn_o   : array[1..32] of BYTE;   //--- предыдущее состояния кнопочных реле группы ДНСН
  dnsn_dot : array[1..32] of Boolean;//-------------------- Признак отмены совместно с ДОТ
  dnsn_n   : array[1..32] of string; //------------ список имен в группе ДНСН для О1 - О32

  dir_s    : array[1..32] of BYTE;   //--------------- Состояния кнопочных реле группы ДИР
  dir_o    : array[1..32] of BYTE;   //---- предыдущее состояния кнопочных реле группы ДИР
  dir_dot  : array[1..32] of Boolean;//-------------------- Признак отмены совместно с ДОТ
  dir_n    : array[1..32] of string; //------------- список имен в группе ДИР для О1 - О32

  dot_s    : BYTE;                   //----------------- Состояние стоечных реле ДОТ1+ДОТ2
  dot_o    : BYTE;                   //------ предыдущее состояние стоечных реле ДОТ1+ДОТ2

  ir       : BYTE;                //-- Состояние интерфейса запуска искусственной разделки
end;

//========================================================================================
//---------------------------------------- структура для описания объектов трасс имитатора
TTrassa = record
  TypeObj : array[1..100] of BYTE;  //------------------------- Код(идентификатор) объекта
  Name    : array[1..100] of string; //------------------------------------- наименование
  Index   : array[1..100] of integer;
end;
type  PTrasStruct = ^TTrassa; //------------------------------- Указатель на объект трассы

//========================================================================================
//------------------------------------------------ Структуры описания зависимостей станции
//========================================================================================
//--------------- Описание соединений между объектами зависимостей и тип связей между ними
TConnector = record
  TypeJmp : BYTE; //------------------- Тип перехода, подключенного к данной точке объекта
  Obj     : WORD; //-------------------- Код объекта, подключенного к данной точке объекта
  Pin     : BYTE; //------------ Номер точки объекта, подклюсенного к данной точке объекта
end;

//----------------------------------------- Описание ссылок на датчики входного интерфейса
TObjInpInt = record
  Tums     : WORD; //-------------------------------- 0 - датчик в нескольких контроллерах
                   //1..9999 ---------------------------------- датчик в одном контроллере
                   //---------------- 10000...65535 - составной датчик в одном контроллере
  Datchik  : WORD; //----------------------------------------- Номер датчика или параметра
  State    : BYTE; //--------------------------------------------------- состояние датчика
end;

//---------------------------------------- описание ссылок на объекты выходного интерфейса
TObjOutInt = record
  Tums     : BYTE; //---------------------------------- номер стойки ТУМС этого интерфейса
  Group    : BYTE; //------------------------------ номер группового реле этого интерфейса
  O        : BYTE; //------------------------------ номер объектного реле этого интерфейса
  State    : BYTE; //------------------------ текущее состояние кнопочного реле интерфейса
end;

//(ИМИТАТОР) ------------------------------------------------ Описание логических датчиков
TLogicInt_IMIT = record
  LogikII : array[1..8] of TObjInpInt;
end;

//(ИМИТАТОР) ------------------------------------------------- Описание составных датчиков
TCombInt = record
  logic  : byte; //---- Код логики составного датчика: 1- сборка фронтов, 2- сборка тылов.
  State  : array[1..8] of byte; //------------------- Коды состояния составляющих датчиков
  ObjIIComb : TObjInpInt;  //------------------------------- Входной интерфейс контроллера
end;

//(ИМИТАТОР) ---------------------------------------- Структура описания района управления
TControlRegion = record
  ListOK : array[1..8] of Integer; // Список исполнительных контроллеров района управления
end;

//(ИМИТАТОР) -------------------------------------------------- Структура объектов станции
TIMITObjects = record
  //---------------------------------------------------- ЗАГРУЖАЕМЫЕ ПАРАМЕТРЫ (КОНСТАНТЫ)
  IDO     : WORD;  //------------------------------------------ Идентификатор типа объекта
  Name    : string;  //---------------------------------------------- Наименование объекта
  Connects  : array[1..4] of TConnector;  //--- Список соединений с объектами зависимостей
  ObjII    : array[1..16] of TObjInpInt; //---------- Список датчиков входных интерфейсов
  ObjOI    : array[1..8]  of TObjOutInt; //---------------- Список кнопочных реле объекта
  ObjIntP  : array[1..16] of Integer;    //-------------- Список целочисленных параметров
  ObjBoolP : array[1..16] of Boolean;    //----------------- Список логических параметров

  //---------------------------------------------------- ВНУТРЕННИЕ ПАРАМЕТРЫ (ПЕРЕМЕННЫЕ)
  State     : array[1..20] of BYTE;   //----- Список состояний внутренних датчиков объекта
  IntP      : array[1..10] of Integer;// Список состояний целочисленных параметров объекта
  BoolP     : array[1..10] of Boolean;//--- Список состояний логических параметров объекта
  Timers    : array[1..3]  of TTimerList; //------------ Список состояний таймеров объекта

  //------------------------------------ Признак необходимости обработки новизны состояния
  ChTimer   : boolean;
  ChFirst   : integer;
  ChSecond  : boolean;
end;

PListObjects = ^TIMITObjects;

//========================================================================================
//---------------------------------------------------------------------------- Типы тестов
TTestType =
  (
    ttNone,       //-------------------------------------------------- Выключены все тесты
    ttManualTUMS, //-------------------------------------------- Включить ручной тест ТУМС
    ttAutoTUMS,   //------------------------------------ Включить автоматический тест ТУМС
    ttManualARM   //------------------------------------------ Включить ручной тест РМ ДСП
  );

var
//========================================================================================
//----------------------------------- Описание данных АРМ управления имитатором (ИМИТАТОР)
//----------------------------------------------------------------------------------------
Trass_Imit : array [1..8] of TTrassa; //массивы для построения трасс маршрутов в имитаторе
Obj_trass  : array [1..8] of integer; //-------------------- номер текущего объекта трассы
SrcPath    : string;                  //--------- Путь к файлам описания имитатора станции
SrcName    : string;                  //----------------- Наименование открытого имитатора

ListII     : TStringList; //-------- (ИМИТАТОР) Список параметров входных интерфейсов ТУМС
//----------- Описание состоит из имен датчиков входного интерфейса ТУМС, разделенных ";".
//----------------------------------------- Порядок перечисления - построчный сверху вниз.
//---------------------- В каждой строке содержится полный перечень датчиков одной стойки.

ListOI  : TStringList; //---------- (ИМИТАТОР) Список параметров выходных интерфейсов ТУМС
  //------ Описание состоит из номеров датчиков входного интерфейса, связанных с объектами
  //-- выходного интерфейса, разделенных ";". Порядок следования объектов вых. интерфейса:
  //------------------------------------ ДИР1, ДМУ1, ДПУ1, ДПС1, ДМС1, ДНСН1, ДЧСН1, ДОТ1,
  //------------------------------------ ДИР2, ДМУ2, ДПУ2, ДПС2, ДМС2, ДНСН2, ДЧСН2, ДОТ2,
  //-------------------------------------- о1,   о2,   о3,   о4,   о5,   о6,    о7,    о8,
  //------------------------------------- о9,   о10,  о11,  о12,  о13,  о14,   о15,   о16,
  //------------------------------------- о17,  о18,  о19,  о20,  о21,  о22,   о23,   о24,
  //------------------------------------- о25,  о26,  о27,  о28,  о29,  о30,   о31,   о32.
  //------------- В каждой строке содержится полный перечень объектов выходного интерфейса

ListOE: TStringList; //- (ИМИТАТОР) Список параметров кнопочных реле (формирование команды
// управления объектами станции. Каждая строка содержит описание для одной стойки.
//----- Порядок описания: ДПУ:О1, ..., ДПУ:О32, ДМУ:О1, ..., ДМУ:О32, ДПС:О1, ..., ДИР:О32

ListLI: TStringList;//(ИМИТАТОР)Список составных (логических) датчиков входных интерфейсов
//Каждая строка - это один составной датчик, для которого перечислены составляющие датчики
//входных интерфейсов (№ ТУМС и № датчика в матрице) до 8 датчиков входных интерфейсов.

ListCI : TStringList;//(ИМИТАТОР)Список сборных датчиков,состощих из параметров нескольких
//объектов.Каждая строка описывает один датчик, для которого описывается порядок сборки и
//связанный с ним входной интерфейс.

ListOZ : TStringList; //--------------- (ИМИТАТОР) Список параметров объектов зависимостей
//------------------------- Каждая строка содержит описание одного станционного объекта.
// Порядок описания:
// Наименование объекта, Тип объекта, Список ссылок на датчики входных интерфейсов ТУМС,
// Список ссылок на объекты вых.интерфейсов ТУМС,список целочисленных параметров объекта,
//-------------------------------------------------- Список логических параметров объекта.

//========================================================================================
//(ИМИТАТОР) -------------------------- Описание структур данных АРМ управления имитатором
ip : TImitParams;   //---------- описание каналов подключенных к интерфейсам ТУМС и буфера
ii : array[1..MaxNumberTUMS] of TInputInterface;  //----------- Описание матриц ввода ТУМС
oi : array[1..MaxNumberTums] of TOutputInterface; //--- описание выходных интерфейсов ТУМС
oe : array[1..MaxNumberTums] of TOutputEvent;// Описание "кноп.команд" вых.интерфейса ТУМС
li : array[1..1000] of TLogicInt_IMIT; //-- Список логических датчиков входных интерфейсов
ci : array[1..100] of TCombInt; // Список сборок по фронту или тылу датчиков вх.интерфейса
cr : array[1..4] of TControlRegion; //------ Список районов управления имитируемой станции
objz : array[1..2000] of TIMITObjects; //---------- Массив объектов зависимостей имитатора
//
ViewNumTums   : integer;  //--------------------------------- Номер просматриваемого ТУМСа
ObjMaket      : integer;  //------------ Номер объекта, выбраного на макете для управления

TestType      : TTestType;//--- Номер автотеста, запущенного на исполнение в данный момент
CntOZ         : Integer;  //----------- счетчик количества объектов зависимостей имитатора
Multiv        : Integer;  //------------------------ Счетчик импульсов для мультивибратора
SpeedTimer    : boolean;  //-------- Признак включения форсированных таймеров имитатора ЭЦ
SpeedTimerVal : integer;  //----------------- Значение счетчика для форсированного таймера
InpIntOn      : boolean;  //---------------------- Признак исправности входного интерфейса
OutIntOn      : boolean;  //--------------------- Признак исправности выходного интерфейса
TestModel     : boolean;  //- Признак проверки в режиме точной модели зависимостей станции
ModelZamykMarh : BYTE;    //------ Способ замыкания маршрутов в моделируемой централизации

MainLoopCnt   : integer;  //-------------------------- Счетчик циклов обсчета зависимостей
LoopMarkers   : boolean;  // признак записи в протокол меток времени начала и конца циклов
SignSupport   : boolean;  //------- признак выключения проверки удержания сигнального реле

TmpDir        : string;   //----------- Директория для хранения временных данных имитатора
fhReport      : integer;  //---------------------- Дескриптор файла протокола проверки РПЦ
fhKanal       : integer;  //- Дескриптор файла протокола канала Имитатор <-> АРМ Имитатора
fhErrors      : integer;  //----------- Дескриптор файла протокола ошибок ПО АРМ Имитатора

//========================================================================================
//----------------------------------------------------------------------------------- САПР
const
  //--------------------------------------------------------- Типы соединителей для РМ-ДСП
  LnkEnd  = 0; //--------------------------------------------------- конец строки объектов
  LnkFull = 7;
  LnkNecentr = 222; //-------------------------- переход в нецентрализованную зону станции
  LnkIzo  = 28;
  LnkNeg  = 112; //----------------------------------------------------- негабаритный стык
  LnkRgn  = 193;  //---------------------------------------------- конец района управления
  const
  // значения имен для реле дешифратора
  NameGrup : array[1..9] of string =
  ('','ДПУ','ДМУ','ДПС','ДМС','ДНСН','ДЧСН','ДИР','ДОТ');
  NameO1 : array[1..12] of string =
  ('О1','О2','О3','О4','О5','О6','О7','О8','О17','О19','О21','О23');
  NameO2 : array[1..12] of string =
  ('О9','О10','О11','О12','О13','О14','О15','О16','О18','О20','О22','О24');
  //------------------- коды заголовков сообщений для обмена данными с корзинами имитатора
  KodZag : array[1..20{25}] of integer = (3,5,6,9,10,12,17,18,20,24,33,34,36,40,48,65,66,68,72,
  80{,132,136,144,160,192});
//========================================================================================
  ChTO = 3; //-------------------- длительность обработки системных задач в длинных циклах
  MaxLiveCtr = 500; //------------- максимальное значение счетчика ожидания длинных циклов
//========================================================================================
//---------------------------------------------------- перечень файлов с описанием станции
  filenameObjDat           = 'Objects.dat';
  filenameConDat           = 'Connects.dat';
  filenameInpInt           = 'Inputs.dat';
  filenameInpIntParam      = 'InpInt.dat';
  filenameLogic            = 'Logics.dat';
  filenameOutInt           = 'Outputs.dat';
  filenameOutIntParam      = 'OutInt.dat';
  filenameControllersList  = 'Controls.dat';
  filenameControllersParam = 'IKParams.dat';
  filenameInpCont          = 'Inpcont.dat';
  filenameOutCont          = 'Outcont.dat';
  filenameFR3Dat           = 'FR3.dat';
  filenameVBDat            = 'VB.dat';
//========================================================================================
  FileNameTabloCfg : string = 'Tabcfg.dat';
  FR_LIMIT = 4096;

var
  MarhTrac     : TMarhTracert; //-------------------------- структура трассировки маршрута
  MarhTrac1    : array[1..5] of TMarhTracert; //----------- структура трассировки маршрута
  MarhRdy      : Boolean;   //--------------- признак готовности маршрута к выдаче в канал
  LastMsgToDSP : string;
  LastJmp : TSos;

  RcvOLS      : array[1..2] of TOverlapped; //------ Структура перекрытия приема для трубы
  TrmOLS      : array[1..2] of TOverlapped; //---- Структура перекрытия передачи для трубы

  WrBuffer    : array[0..4097] of char; //--------------------------- буфер записи в трубу

  DoubleCnt   : Byte;  //---------- счетчик параметров Double готовых к передаче на сервер
  MaxTimeOutRecave: Double; //- Значение допустимого максимального времени хранения данных
  MySync         : array[1..2] of Boolean;//признак последней синхрон-ции от данного ТУМС
                            //-в FR3 до сброса признака активизации (достоверности данных)
  AnsverTimeOut   : Double; //-- Значение допустимого максимального времени захвата канала
                            //-------------------------- "АРМ-СЕРВЕР" после приема маркера
  LastCRC         : array[1..2] of Byte; //-------------- Указатель на последнюю квитанцию
  BackCRC         : array[1..20,1..2] of WORD; //------------------------- буфер квитанций
  LastSrv         : array[1..2] of Byte; //------------------ Номер запрашивающего сервера
  NewCmd          : array[1..2] of string;//буфер сообщений отосланных в сервер для архива
  NewFR           : array[1..2] of string;//--------------------- буфер новизны для архива
  NewMsg          : string; //------------------------------ буфер сообщений из потока FR3

  OldFormat : boolean; //------------------------------------ признак базы старого формата

  IIParam : array[1..32{40}*14] of TInputIntParam;
  OIParam : array[1..7*32] of TOutputIntParam;

  reg        : TRegistry; //-------------------- Объект для доступа к параметрам в реестре
  database   : string;    //--------------- Путь к базе данных, описывающей модель станции
  StationDir : string;   //---------- Путь для сохранения исполняемой базы данных станции
  ProjectName : string; //--- Наименование станции (для сохранения в файле конфигурации БД
                        //                                          XXX.INF в строке name)
  ProjectText : string; //---- Текстовое описание файла конфигурации станции (комментарий)
  ServerIndex : string; //- Индекс буфера связи для передачи параметров и команд "Сервера"
  ArmIndex    : string; //---- Индекс буфера связи для передачи параметров и команд "АРМа"
  StateIndex  : string; //------------- Индекс буфера связи для сохранения вида управления
                        //                                     (марш./разд./отмена и т.д.)
  LimitFRS     : string; //------------------------------- Количество объектов в канале FR
  s            : string; //--------- промежуточная строковая переменная разного назначения
  EditOVBuffer : array[1..4096,1..4] of string; // имена объектов и комментарии в OVBuffer
  EditObjUprav : array[1..4096,1..2] of string; // имена объектов и комментарии в ObjUprav
  MsgList      : array[1..10000] of string;     //список сообщений для дискретных датчиков
  MsgN     : SmallInt;         //------------------- счетчик сообщений дискретных датчиков
  MsgServ : char;  //---------------------------------------------- сообщение от сервера
  SrcPtr : Integer; //------------------- Указатель на текущий элемент в структуре проекта
  DstPtr : Integer; //-------------------- Указатель на текущий элемент в структуре РМ-ДСП
  LinkFRPtr : Integer; //------------- Указатель на текущий элемент списка связки датчиков
  IndexAutoGroup : Integer; //- счетчик определения № комплектов установки маршрута автод.
  OddRight : Boolean; //------------------------------------------ Признак нечетных справа
  cfgOV     : array[1..20,1..2] of integer; //-------------------- Параметры файлов модели
  cfgOVname : array[1..20,1..3] of string; //------------------------- имена файлов модели
  cfgOU     : array[1..20,1..2] of integer;
  cfgOUname : array[1..20,1..3] of string;
  cfgBV     : array[1..20,1..2] of integer;
  cfgBVname : array[1..20,1..3] of string;
  NenormUVK : array[1..2] of cardinal;
  SVAZ : byte ; //-------------------------- байт мгновенного состояния каналов связи АРМа
  KVITOK : Boolean; //--------------------------- признак принятия квитанции от УВК в STAN
  KOMANDA_OUT : Boolean; //-------------------------- признак выдачи команды из STAN в УВК
  NET_PRIEMA_UVK : integer;
  hdrOZ : array[1..20] of string; //------------------------------ описания файлов проекта
  hdrOV : array[1..20] of string;
  hdrOU : array[1..20] of string;
  hdrBV : array[1..20] of string;
  Regim_DC, Regim_SU : Boolean; //------------ признаки наличия на станции режимов ДЦ и СУ
//========================================================================================
//----------------------- Описание распределения объектов по фрагментам базы данных РМ-ДСП
//---------------------------------------- используется в программе конвертера  "CnvToArm"
  FrameDB : array[1..3] of TFrameDB;
//========================================================================================
//--------------------------------------- Описание распр-ния объектов в фрагментах проекта
//---------------------------------------- используется в программе конвертера  "CnvToArm"
  FrameSAPR : array[1..3] of TFrameSAPR;
//========================================================================================
//----------------------------------- Индексы фрагментов для объектов зависимостей проекта
//---------------------------------------- используется в программе конвертера  "CnvToArm"
  FrameObj : array[1..4096] of Byte;
//========================================================================================

  FrameCon : array[1..4096] of Byte;//-------- индексы фрагментов для соединителей проекта
  LinkObj : array[1..4096] of SmallInt;//-- Ссылка в dat САПРа на объект зависимостей в OZ
  OddSide : boolean;
 //=======================================================================================
  ListMessages : string;  //-------- список предупреждений для просмотра на резервном АРМе
  newListMessages : Boolean;
  LstNN : string;  //----------------------------------------------- список неисправностей
  newListNeisprav : Boolean;
  ListDiagnoz  : string;  //------------------------- список диагностических сообщений УВК
  newListDiagnoz : Boolean;
  findSrv  : boolean;
  mem_page : boolean;     //-------- false - рисовать из Tablo1, true - рисовать из Tablo2
  tab_page : boolean; //---- переключатель страниц для отображения неисправности устройств
  command  : boolean;     //------------------------------- признак выбора команды из меню
  ID_obj   : smallInt;//- Идентификатор активного объекта зависимостей для выбора операции
  ID_ViewObj: smallInt;//------------- номнер объекта для формирования описания состояния
                        //-----------------                в АРМ-ШН и при просмотре архива
  ID_menu  : SmallInt;  //--------------------------- Идентификатор ожидаемой команды/меню
  cur_obj  : smallInt; //------------------- номер объекта зависимостей под курсором мышки
  StartObj : smallint; //---- номер объекта, с которого начинается управление с клавиатуры



//========================================================================================
//-------------------------------------------- Параметры определяющие режимы работы РМ ДСП
  SysTime : SYSTEMTIME; //------------------------------------------------ системное время
  asTestMode : Byte; //---------------------- Признак включения режима проверок РПЦ - $aa,
                     //--------------------------------------- при нормальной работе - $55
  WorkMode   : TWorkMode;

  cntObjZav   : Integer;  //------------------- Проверяемый СRC объект зависимости проекта
  cntObjView  : Integer;  //------------------- Проверяемый CRC объект отображения проекта
  cntOVBuffer : Integer;  //-------------------- Проверяемый CRC буфер отображения проекта
  cntUpr      : Integer;  //-------------------- Проверяемый CRC объект управления проекта

  Lex : array[1..1000] of TStringLex; //----------------- Список коротких сообщений РМ ДСП
  Lex2 : array[1..500] of TStringLex; //--------------------- Список сообщений из Lex2.sdb
  Lex3 : array[1..500] of TStringLex;//---------------------- Список сообщений из Lex3.sdb

  LinkFR3 : array[1..8192] of TLinkFR3; //связка имени датчика FR3 с номером бита в РМ ДСП
  FR3    : array[1..FR_LIMIT] of Byte;  //--------------- массив для обсчета состояний FR3
  FR3inp : array[1..FR_LIMIT] of Char;  //----------------- массив для записи принятых FR3
  FR3s   : array[1..FR_LIMIT] of TDateTime; //--------------------- регистрация приема FR3
  FR4    : array[1..FR_LIMIT] of Byte;      //-------------------- буфер обсчета состояний
  FR4inp : array[1..FR_LIMIT] of Char;      //--------------------------- буфер приема FR4
  FR4s   : array[1..FR_LIMIT] of TDateTime; //--------------------- регистрация приема FR4
  FR5    : array[1..FR_LIMIT] of Byte;      //-------------------------- буфер диагностики
  FR6 : array[1..1024] of Word; //-------------------------------- непарафазности датчиков
  NewFR6 : word; //------------------------------------- последняя принятая непарафазность
  OldFR6 : word; //-------------------------------- последняя фиксированная непарафазность
  FR7 : Cardinal; //------------------------------- неисправности плат УВК по вводу группы
  FR8 : int64;
  FR9 : Cardinal; //------------------------------- неисправности плат УВК по съему данных

  //====================== параметры для прокрутки архива ================================
  ArchName  : string;   //-----------------------------------  Имя файла архива (без пути)
  ArcIndex  : cardinal; //----------------------------------------- Индекс строки в архиве
  DTFrameBegin  : Double;  //-------------------------------------------- Начало фрагмента
  DTFrameEnd    : Double;  //--------------------------------------------- Конец фрагмента
  DTFrameOffset : Double;  //--------------------------- время в точке просмотра фрагмента
  FrameOffset   : Integer; //---------------------- Указатель на точку просмотра фрагмента
  arhiv : string;  //---------------------------------- строка для воспроизведения архива
  repl : string;
  savearc  : boolean; //--------------------- разрешение записи принимаемых данных в авхив
  chnl1    : string;  //----------------------------------------- прием данных из 1 канала
  chnl2    : string;  //----------------------------------------- прием данных из 2 канала
  KanalType : Byte; //------------------- тип канала связи АРМ-сервер 0 - RS-422, 1- Pipes
  LastDiagN : Byte; //---------- Параметры последнего принятого диагностического сообщения
  LastDiagI : Word;
  LastDiagD : Double;
  ready      : Boolean;
  lock_maintimer : boolean; //---------- разрешение обработки цикла главного таймера табло
  TimeLockCmdDsp : Double;  //------------------ время блокирования двойного щелчка мышкой
  IsCloseRMDSP   : Boolean;
  AppStart       : Boolean;
  SendToSrvCloseRMDSP : Boolean;

  shiftxscr : integer; //-------------------------------------------------- сдвиг картинки
  shiftyscr : integer;
{$IFDEF RMSHN}
  LinkTCDC : array[1..80] of TLinkTCDC; //-------------------- связка датчиков в канале ДЦ
{$ENDIF}
{$IFDEF RMARC}
  LinkTCDC : array[1..80] of TLinkTCDC; //-------------------- связка датчиков в канале ДЦ
{$ENDIF}
  MYT : array[1..9] of Word;//----список индексов FR3, содержащих MYTHX-сообщения от стоек
  StopALL : integer;     //---- если равно 15, то это признак завершения работы оператором 
  NewMenuC         : string;               // буфер команд меню, использованных оператором
  CmdCnt           : Byte;  //-- счетчик команд раздельного управления, готовых к передаче
  CmdBuff     : TCommands; //---------- команда раздельного управления, ограничений и т.п.
  ParamDouble : TParamDouble;//------------ буфер параметров Double для передачи на сервер
  maket_strelki_index : SmallInt;//---------------- индекс стрелки, установленной на макет
  maket_strelki_name  : string; //-------------------- имя стрелки, установленной на макет
  MyMarker       : array[1..2] of Boolean; //---- признак получения маркера из каналов 1,2
  LastRcv        : TDateTime; //-------------------- время последнего приема полного кадра
  LastTime       : TDateTime; //------------------------------ значение последнего таймера
  LastSync       : TDateTime; //---------------------------- время последней синхронизации
  LastMove       : TDateTime; //--------------- время последнего перемещения курсора мышки
  dMigTablo : TDateTime; //------ период мигания для мигающих объектов (для работы в TABLO
  LastReper      : Double;    //-- время последнего сохранения 10-ти мин. архива состояний
  ObjHintIndex   : Integer;   //-------------------- индекс отображаемого описания объекта
  LockHint       : Boolean;// блокировка вывода описания объекта при отработке команд меню
  LockComDsp     : Boolean;//блокировка дейст.оператора на время восприятия предупреждения
  ShowWarning    : Boolean;//признак вывода важного сообщения, выделяемого миг-щей строкой
  SBeep : array[1..6] of Boolean;//-------------------- выдать короткий звонок 1,2,3,4,5,6
  IpBeep : array[1..2] of Boolean;//----------------- звонки первого и второго приближения
  NAS            : Boolean;//--------------- признак установленного нечетного автодействия
  CHAS           : Boolean;//----------------- признак установленного четного автодействия
  Old_NAS        : Boolean;//------ признак прежнего установленного нечетного автодействия
  Old_CHAS       : Boolean;//-------- признак прежнего установленного четного автодействия
  MsgStateRM     : string; //---------------------------- Сообщение из канала Сервер - АРМ
  MsgStateClr    : Integer;//----------------------------------------- Код цвета сообщения
  CmdSendT       : Double; //-------------------------------- время выдачи команды в буфер
  LockTablo      : Boolean;//------------------------ блокировка табло на время прорисовки
  KOKCounter     : Integer;//----------------------------------- счетчик нажатий кнопки ОК
  NewNeisprav    : Boolean;//-------------------------------- фиксация новой неисправности
  vremia_zapisi : Boolean;
  OperatorDirect : Double;// время последнего воздействия оператора с клавиатуры или мышки

  MutexAvar : cardinal;  //============================ мьютекс для аварийного перезапуска
  NameAvarMutex : PAnsiChar;

//****************************************************************************************
//                            для табло
//****************************************************************************************

  isChengeRegion : Boolean;//разрешить изменения размеров окна при смене района управления
  Tablo1        : TBitmap; //------------------------------------------- 1- ый образ табло
  Tablo2        : TBitmap; //------------------------------------------- 2- ой образ табло
  Zvuk          : Boolean; //--------------------------------- Включить фиксированный звук
  LastX         : SmallInt; //-------------------------- Координата курсора по горизонтали
  LastY         : SmallInt; //---------------------------- Координата курсора по вертикали
  SMsg          : array[1..4] of string; //--------------------- Массив коротких сообщений
  SMsgcvet      : array[1..4] of TColor;
  FixMessage    : TFixMessage;  //----------- структура сообщений, требующих подтверждения
  DspMenu       : TDspMenu;     //--------------- экземпляр структуры описания меню РМ-ДСП
  DspCom        : TDspCommand;  //--------------------- структура выбора команды оператора
  VspPerevod    : TVspPerevod;  //--- Структура ожидания вспомогательного перевода стрелки
  OtvCommand    : TOtvCommand;  //Структура ожидания ввода испол-ной ответственной команды
  IntervalAutoMarsh : Integer;  //Время для повторной команды уст-ки маршрута автодействия
  AKNR     : array[1..20]  of TAutoTrace;  //--------------------------------- массив АКНР
  Timer    : array[1..100] of Integer;     //---- массив таймеров для отображения на табло
  Ikonki   : array[1..200,1..3] of SmallInt; //массив для размещения ярлыков на экране РУ1
  Ikonki2  : array[1..200,1..3] of SmallInt; //массив для размещения ярлыков на экране РУ2
  Stellaj  : array[1..20]     of Boolean;    //------------ массив для работы со стеллажом
  IkonPri  : Byte;                           //----------------- приоритет массива ярлыков
  IkonNew  : Boolean;                        //--------- признак новизны в массиве ярлыков
  IkonSend : Boolean;  //----- признак необходимости передачи массива табличек в канал АСУ
  IkonkaMove   : Boolean; //------------------------ признак требования перемещения иконки
  IkonkaMoved  : Boolean; //---------------------- признак фактического перемещения иконки
  IkonkaDown   : Integer; //------------------------------------ номер перемещаемой иконки
  SetIkonRezNonOK : Boolean;//-разрешить уст-ку иконок с резервного РМ-ДСП без нажатия КОК
  BuffArc  : array[1..32768] of byte;   //----------------------- Буфер для записи в архив
  LenArc   : integer;                   //---------------- Длина данных для записи в архив
  SrvActive : Byte;                     //----------------------- Индекс активного сервера
  SrvCount  : Byte;                     //--------- Счетчик количества включенных серверов
  SrvState  : Byte;                     //----------------------- Буфер состояния серверов
  DirState  : array[1..4] of Byte;   //----- Буфера состояний режимов управления и районов
                                     //       для АРМов (на любом РМ-ДСП используется 1-й,
                                     //           на АРМ-ШН - отдельно для каждого РМ-ДСП)
  ArmSrvCh  : array[1..2] of Byte;   //----- Буфер для отображения состояния каналов связи
                                     //                 с нижним уровнем (сеть управления)
  ArmAsuCh  : array[1..3] of Byte;   //----- Буфер для отображения состояния каналов связи
                                     //                       с верхним уровнем (сеть АСУ)
  ArmDCCh   : array[1..2] of Byte;   //----- Буфер для отображения состояния каналов связи
                                     //                          с ЛП-ДЦ (сеть управления)
  configRU  : array[1..3] of TConfigRU; //------------- список описаний районов управления
  config    : TConfigProject; //- Экземпляр структуры описания конфигурации модели станции

  StateRU   : Byte; //------------------------------------------ текущее состояние сервера
  //-------------------------------------------------------------------- Назначение битов:
  //1 ---------------------------------------- если в работе Сервер 1, то бит = 1, иначе 0
  //-2---------------------------------------- если в работе Сервер 2, то бит = 1, иначе 0
  //--3--------------------------------------- если в работе Сервер 3, то бит = 1, иначе 0
  //---4---------------------------------------- если готов другой АРМ этого р-на,то бит=1
  //----5------------------------------------- если сервер готов принять команды, то бит=1
  //-----6---------------------------------------------- если сервер в режиме ОК, то бит=1
  //------7---------------------------------------------- если управление от УВК, то бит=1
  //-------8------------------------------------- если АРМ основной, то бит=1, иначе бит=0

  ArmState  : Byte; //------------------------------------- состояние "панели" управления
  //-------------------------------------------------------------------- Назначение битов:
  //1-------------------------------------------------------------- раздельное управление,
  //-2------------------------------------------------------------- маршрутное управление,
  //--3--------------------------------------------------------------------------- отмена,
  //---4--------------------------------------------------------------------- ограничения,
  //----5------------------------------------------------------------ всп.перевод стрелки,
  //-----6-------------------------------------------------------------------- нажата КОК,
  //------7--------------------------------------------------- подсветка положения стрлок,
  //-------8------------------------------------------------------ выполняется трассировка

  StartTime : Double;   //------------------------------------------ время запуска системы
  StartRM   : Boolean;  //-------------------------- признак выполнения стартовых процедур
  ChDirect  : Boolean;  //--------- признак получения команды изменения статуса управления
  StDirect  : Boolean;  //----------- значение параметра управления, полученное от сервера
  ChRegion  : Boolean;  //---------- признак получения команды изменения района управления
  NewRegion : Byte;     //-------------------------------- Индекс нового района управления
  DiagnozON : Boolean;  //---------------------- признак включения диагностики УВК на АРМе
  SyncTime  : Boolean;  //---- признак формирования команды синхронизации времени серверов
  SyncCmd   : Boolean;  //признак выдачи команды синхронизации времени серверов в канал ТУ
  hWaitKanal : THandle; //------------------------ событие ожидания обработки канала связи
//{$IFDEF RMARC}
  ArcReady       : Boolean;   //--------------------- данные архива готовы для отображения
  SpeedZoom      : Double;    //--------------------- Масштаб времени при прокрутке архива
  CurrentTime    : Double;    //--------------- Текущее время при масштабируемой прокрутке
  LastSyncArc    : Double;    //-- последняя метка системного времени при прокрутке архива
  LastFixed      : integer;   //--------- позиция последнего зарегистрированного сообщения
  SndNewWar,                  //-------------------------- признак новой неисправности РПЦ
  SndNewUvk,                  //-------------------------- признак новой неисправности УВК
  SndNewMsg : Boolean;        //---------------------- признак нового сообщения от Сервера
//{$ENDIF}
  ObjWav : array[1..10] of String; //------- Список звуков для состояний объектов
  IpWav        : TStringList; //----------- Список звуков для занятия участков приближения
  ListFR3Param : TStringList;
//------------{$IFDEF RMSHN}
  NotifyWav    : TStringList; //---------------------- Список звуков для событий на АРМ ШН
  FixNotify    : array[1..10] of TFixNotify;  //----- Структура для фиксации событий на ШН
  NameFR       : TStringList; //--------------------------- список имен датчиков FR3 на ШН
//------------------{$ENDIF}
  TryFixed : Integer; //--------------------------------- Фиксация сбоя в работе программы
  LoopSync   : Boolean; //----------------- признак обслуживания каналов обмена с сервером
  LoopHandle : THandle; //------- идентификатор потока обработки каналов обмена с сервером
  ReBoot     : Boolean; //------------------- признак необходимости перезапуска компьютера
                        //                    после завершения работы программы Табло
//========================================================================================
//  Общие переменные для САПР
//========================================================================================
  FileNamePrj : string; //--------------- Полное имя главного файла проекта (включая путь)
  FilesPath   : string; //------------------------------------------------- Путь к проекту
  IsNeedSave : boolean; //---------------------------------- Признак несохраненной новизны
  palette : array[1..100] of TPalPlan; //----------------------------- Палитра компонентов
 {$IFNDEF RMARC}
  KanalSrv  : array[1..2] of TKanal;
   {$ENDIF}
//========================================================================================
//               Параметры устройств РПЦ в формате САПР
//---------------------------------------------------------------------------
  objects    : array[1..4096] of TObjParams; //------------ структура зависимостей станции
  connects   : array[1..4096] of TConnects;  //---------- структура связей между объектами
  inint      : array[1..8192] of TInputInt;  //------- список датчиков входных интерфейсов
  logint     : array[1..1024] of TLogicInt;  //---------------- список логических датчиков
  outint     : array[1..4096] of TOutputInt; //------ список датчиков выходных интерфейсов
  linkVB     : array[1..4096] of TLinkVB;    //-------- список ссылок на буфер отображения
//-------------------------------------- Переменные для работы процедур формирования табло
  ObjView      : array[1..4096] of TOVStruct;   //------------- массив визуальных объектов
  OVBuffer     : array[1..4096] of TOVBuffer;   //-- структура связи объектов зависимостей
                                                //                  и отображения на табло
  ObjZv        : array[1..4096] of TOZStruct;   //----------- массив объектов зависимостей
  ObjUprav     : array[1..4096] of TObjUprav;   //------------- массив объектов управления
  LinkFR       : array[1..4096] of TLinkFR3_T;  //------------------------ связка датчиков
  TabloP   : TTabloParams;    //------------------------- Объект описания параметров табло
  TabloCfg : array[1..10] of TConfigTablo; //------------------------------ Описания табло
  selectCon  : WORD;      //----------------------------------------- Соединитель в фокусе
  selectIDT  : Integer;   //------------------------------ Код объекта для вставки в табло
  SelectObj : Integer;    //-------------------------------------- Индекс объекта в фокусе
  objt : array[1..1000] of TObjectsTablo; //----------------------------- Компоненты табло
  obju : array[1..1000] of TObjectsUprav; //------------------------ Компоненты управления
  LinkObjT : array[1..1000] of TLinkObjTablo; //-------------------- Связка объектов табло
  palTablo : array[1..100] of TPalTablo; //--------------------- Палитра компонентов табло
  selectObjT : Integer; //---------------------------------- Индекс объекта табло в фокусе
  testObj : Integer; //-----------------------номер проверяемого объекта в тестовом режиме
  TekFontSize : Integer; //------------------------------------------текущий размер шрифта
implementation
end.
